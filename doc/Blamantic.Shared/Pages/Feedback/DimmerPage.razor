@page "/component/feedback/dimmer"

    <Pager DataSource="@(new List<string>(new[]{
                             "Demo","Content Dimmer","Full Screen","Active","Disabled","Vertical Alignment","Inverted","Opacity","Partially Dimmer"
                         }))">
        <Body>
            <Header1 Divider>
                Dimmer
                <SubHeader>
                    A dimmer hides distractions to focus attention on particular content
                </SubHeader>
            </Header1>

            <Segment>
                You have to invoke <code>Active(bool active)</code> method via reference of instance by <code>@@ref</code>.

            </Segment>

            <PresentationPart Title="Demo">
                <Description>
                    A simple dimmer displays no content
                </Description>
                <RunTemplate>
                    <Segment>
                        <Dimmer @ref="refSample1" />
                        <ParagraphDemo />
                        <ParagraphDemo />
                        <ParagraphDemo />
                    </Segment>
                    <br />
                    <Labeled Button>
                        <Button @onclick="()=>refSample1.Active()">Show</Button>
                        <Button @onclick="()=>refSample1.Active(false)">Hide</Button>
                    </Labeled>
                </RunTemplate>
                <CodeTemplate>
                    @Code.GetCode(@"
```html
<Segment>
    <Dimmer @ref=""refSample1"" />
    <ParagraphDemo />
    <ParagraphDemo />
    <ParagraphDemo />
</Segment>
<br />
<Labeled Button>
    <Button @onclick=""()=>refSample1.Active()"">Show</Button>
    <Button @onclick=""()=>refSample1.Active(false)"">Hide</Button>
</Labeled>
```
")
                </CodeTemplate>
            </PresentationPart>
            <PresentationPart Title="Content Dimmer">
                <Description>
                    A dimmer can display content
                </Description>
                <RunTemplate>
                    <Segment>
                        <Dimmer @ref="refSample2">
                            <Content>
                                <Header2 Inverted Icon>
                                    <Icon IconClass="heart" /> Do you like me?
                                </Header2>
                            </Content>
                        </Dimmer>
                        <ParagraphDemo />
                        <ParagraphDemo />
                        <ParagraphDemo />
                    </Segment>
                    <br />
                    <Labeled Button>
                        <Button @onclick="()=>refSample2.Active()">Show</Button>
                        <Button @onclick="()=>refSample2.Active(false)">Hide</Button>
                    </Labeled>
                </RunTemplate>
                <CodeTemplate>
                    @Code.GetCode(@"
```html
<Segment>
    <Dimmer @ref=""refSample2"">
        <Content>
            <Header2 Inverted Icon>
                <Icon IconClass=""heart"" /> Do you like me?
            </Header2>
        </Content>
    </Dimmer>
    <ParagraphDemo />
    <ParagraphDemo />
    <ParagraphDemo />
</Segment>
<br />
<Labeled Button>
    <Button @onclick=""()=>refSample2.Active()"">Show</Button>
    <Button @onclick=""()=>refSample2.Active(false)"">Hide</Button>
</Labeled>
```
")
                </CodeTemplate>
            </PresentationPart>
            <PresentationPart Title="Full Screen">
                <Description>
                    A dimmer can be formatted to be fixed to the page
                </Description>
                <RunTemplate>
                    <Dimmer FullScreen @ref="refSample3">
                        <Content>
                            <Header2 Inverted Icon>
                                <Icon IconClass="attention" />
                                Dimmer Message!
                                <SubHeader>
                                    Dimmer sub-header
                                </SubHeader>
                                <Button Emphasis="Emphasis.Positive" @onclick="()=>refSample3.Active(false)">Close</Button>
                            </Header2>
                        </Content>
                    </Dimmer>
                    <Button Emphasis="Emphasis.Primary" @onclick="()=>refSample3.Active()">Show</Button>
                </RunTemplate>
                <CodeTemplate>
@Code.GetCode(@"
```html
<Dimmer FullScreen @ref=""refSample3"">
    <Content>
        <Header2 Inverted Icon>
            <Icon IconClass=""attention"" />
            Dimmer Message!
            <SubHeader>
                Dimmer sub-header
            </SubHeader>
            <Button Emphasis=""Emphasis.Positive"" @onclick=""()=>refSample3.Active(false)"">Close</Button>
        </Header2>
    </Content>
</Dimmer>
<Button Emphasis=""Emphasis.Primary"" @onclick=""()=>refSample3.Active()"">Show</Button>
```
")
                </CodeTemplate>
            </PresentationPart>
            <PresentationPart Title="Active">
                <Description>
                    An active dimmer will dim its parent container
                </Description>
                <RunTemplate>
                    <Segment>
                        <Dimmer Actived />
                        <ParagraphDemo />
                    </Segment>
                </RunTemplate>
                <CodeTemplate>
        @Code.GetCode(@"
```html
<Segment>
    <Dimmer Actived/>
    <ParagraphDemo/>
</Segment>
```
")
                </CodeTemplate>
            </PresentationPart>
            <PresentationPart Title="Disabled">
                <Description>
                    A disabled dimmer cannot be activated
                </Description>
                <RunTemplate>
                    <Segment>
                        <Dimmer Disabled />
                        <ParagraphDemo />
                    </Segment>
                </RunTemplate>
                <CodeTemplate>
        @Code.GetCode(@"
```html
<Segment>
    <Dimmer Disabled/>
    <ParagraphDemo/>
</Segment>
```
")
                </CodeTemplate>
            </PresentationPart>
            <PresentationPart Title="Vertical Alignment">
                <Description>
                    A dimmer can have its content top or bottom aligned.
                </Description>
                <RunTemplate>
                    <Segment>
                        <Dimmer @ref="refSample4" VerticalAlignment="VerticalAlignment.Top">
                            <Content>
                                <Header2 Inverted Icon>
                                    <Icon IconClass="heart" /> On the top
                                </Header2>
                            </Content>
                        </Dimmer>
                        <ParagraphDemo />
                        <ParagraphDemo />
                        <ParagraphDemo />
                        <ParagraphDemo />
                    </Segment>
                    <Labeled Button>
                        <Button @onclick="()=>refSample4.Active()">Show</Button>
                        <Button @onclick="()=>refSample4.Active(false)">Hide</Button>
                    </Labeled>
                    <Segment>
                        <Dimmer @ref="refSample5" VerticalAlignment="VerticalAlignment.Middle">
                            <Content>
                                <Header2 Inverted Icon>
                                    <Icon IconClass="heart" /> In the middle
                                </Header2>
                            </Content>
                        </Dimmer>
                        <ParagraphDemo />
                        <ParagraphDemo />
                        <ParagraphDemo />
                        <ParagraphDemo />
                    </Segment>
                    <Labeled Button>
                        <Button @onclick="()=>refSample5.Active()">Show</Button>
                        <Button @onclick="()=>refSample5.Active(false)">Hide</Button>
                    </Labeled>
                    <Segment>
                        <Dimmer @ref="refSample6" VerticalAlignment="VerticalAlignment.Bottom">
                            <Content>
                                <Header2 Inverted Icon>
                                    <Icon IconClass="heart" /> At the bottom
                                </Header2>
                            </Content>
                        </Dimmer>
                        <ParagraphDemo />
                        <ParagraphDemo />
                        <ParagraphDemo />
                        <ParagraphDemo />
                    </Segment>
                    <Labeled Button>
                        <Button @onclick="()=>refSample6.Active()">Show</Button>
                        <Button @onclick="()=>refSample6.Active(false)">Hide</Button>
                    </Labeled>
                </RunTemplate>
                <CodeTemplate>
                    @Code.GetCode(@"
```html
<Segment>
    <Dimmer @ref=""refSample4"" VerticalAlignment=""VerticalAlignment.Top"">
        <Content>
            <Header2 Inverted Icon>
                <Icon IconClass=""heart"" /> On the top
            </Header2>
        </Content>
    </Dimmer>
    <ParagraphDemo />
    <ParagraphDemo />
    <ParagraphDemo />
    <ParagraphDemo />
</Segment>
<Labeled Button>
    <Button @onclick=""()=>refSample4.Active()"">Show</Button>
    <Button @onclick=""()=>refSample4.Active(false)"">Hide</Button>
</Labeled>
<Segment>
    <Dimmer @ref=""refSample5"" VerticalAlignment=""VerticalAlignment.Middle"">
        <Content>
            <Header2 Inverted Icon>
                <Icon IconClass=""heart"" /> In the middle
            </Header2>
        </Content>
    </Dimmer>
    <ParagraphDemo />
    <ParagraphDemo />
    <ParagraphDemo />
    <ParagraphDemo />
</Segment>
<Labeled Button>
    <Button @onclick=""()=>refSample5.Active()"">Show</Button>
    <Button @onclick=""()=>refSample5.Active(false)"">Hide</Button>
</Labeled>
<Segment>
    <Dimmer @ref=""refSample6"" VerticalAlignment=""VerticalAlignment.Bottom"">
        <Content>
            <Header2 Inverted Icon>
                <Icon IconClass=""heart"" /> At the bottom
            </Header2>
        </Content>
    </Dimmer>
    <ParagraphDemo />
    <ParagraphDemo />
    <ParagraphDemo />
    <ParagraphDemo />
</Segment>
<Labeled Button>
    <Button @onclick=""()=>refSample6.Active()"">Show</Button>
    <Button @onclick=""()=>refSample6.Active(false)"">Hide</Button>
</Labeled>
```
")
                </CodeTemplate>
            </PresentationPart>
            <PresentationPart Title="Inverted">
                <Description>
                    A dimmer can be formatted to have its colors inverted
                </Description>
                <RunTemplate>
                    <Segment>
                        <Dimmer @ref="refSample7" Inverted/>
                        <ParagraphDemo />
                        <ParagraphDemo />
                        <ParagraphDemo />
                        <ParagraphDemo />
                    </Segment>
                    <Labeled Button>
                        <Button @onclick="()=>refSample7.Active()">显示</Button>
                        <Button @onclick="()=>refSample7.Active(false)">关闭</Button>
                    </Labeled>
                </RunTemplate>
                <CodeTemplate>
    @Code.GetCode(@"
```html
<Segment>
    <Dimmer @ref=""refSample7"" Inverted/>
    <ParagraphDemo />
    <ParagraphDemo />
    <ParagraphDemo />
    <ParagraphDemo />
</Segment>
<Labeled Button>
    <Button @onclick=""()=>refSample7.Active()"">显示</Button>
    <Button @onclick=""()=>refSample7.Active(false)"">关闭</Button>
</Labeled>
```
")
                </CodeTemplate>
            </PresentationPart>
            <PresentationPart Title="Opacity">
                <Description>
                    A dimmer can be formatted to have a different depth of background shading
                </Description>
    <RunTemplate>
        <Segment>
            <Dimmer Actived Opacity="Dimmer.OpacityLevel.Medium" />
            <ParagraphDemo />
        </Segment>
        <Segment>
            <Dimmer Actived Opacity="Dimmer.OpacityLevel.Light" />
            <ParagraphDemo />
        </Segment>
        <Segment>
            <Dimmer Actived Opacity="Dimmer.OpacityLevel.VeryLight" />
            <ParagraphDemo />
        </Segment>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Segment>
    <Dimmer Actived Opacity=""Dimmer.OpacityLevel.Medium"" />
    <ParagraphDemo />
</Segment>
<Segment>
    <Dimmer Actived Opacity=""Dimmer.OpacityLevel.Light"" />
    <ParagraphDemo />
</Segment>
<Segment>
    <Dimmer Actived Opacity=""Dimmer.OpacityLevel.VeryLight"" />
    <ParagraphDemo />
</Segment>
```
")
    </CodeTemplate>
</PresentationPart>
            <PresentationPart Title="Partially Dimmer">
                <Description>
                    A dimmer can be displayed only partially and limited to the overall height of its content instead of the whole to be covered area.
                </Description>
    <RunTemplate>
        <Segment>
            <Dimmer Actived Partially="VerticalAlignment.Top">
                <Content>
                    <Header4 Inverted>Look!</Header4>
                    <SubHeader>Top Dimmer</SubHeader>
                </Content>
            </Dimmer>
            <ParagraphDemo />
            <ParagraphDemo />
            <ParagraphDemo />
        </Segment>
        <Segment>
            <Dimmer Actived Partially="VerticalAlignment.Middle">
                <Content>
                    <Header4 Inverted>Look!</Header4>
                    <SubHeader>Middel Dimmer</SubHeader>
                </Content>
            </Dimmer>
            <ParagraphDemo />
            <ParagraphDemo />
            <ParagraphDemo />
        </Segment>
        <Segment>
            <Dimmer Actived Partially="VerticalAlignment.Bottom">
                <Content>
                    <Header4 Inverted>Look!</Header4>
                    <SubHeader>Bottom Dimmer</SubHeader>
                </Content>
            </Dimmer>
            <ParagraphDemo />
            <ParagraphDemo />
            <ParagraphDemo />
        </Segment>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Segment>
    <Dimmer Actived Partially=""VerticalAlignment.Top"">
        <Content>
            <Header4 Inverted>Look!</Header4>
            <SubHeader>Top Dimmer</SubHeader>
        </Content>
    </Dimmer>
    <ParagraphDemo />
    <ParagraphDemo />
    <ParagraphDemo />
</Segment>
<Segment>
    <Dimmer Actived Partially=""VerticalAlignment.Middel"">
        <Content>
            <Header4 Inverted>Look!</Header4>
            <SubHeader>Middel Dimmer</SubHeader>
        </Content>
    </Dimmer>
    <ParagraphDemo />
    <ParagraphDemo />
    <ParagraphDemo />
</Segment>
<Segment>
    <Dimmer Actived Partially=""VerticalAlignment.Bottom"">
        <Content>
            <Header4 Inverted>Look!</Header4>
            <SubHeader>Bottom Dimmer</SubHeader>
        </Content>
    </Dimmer>
    <ParagraphDemo />
    <ParagraphDemo />
    <ParagraphDemo />
</Segment>
```
")
    </CodeTemplate>
</PresentationPart>
        </Body>
    </Pager>
@code{
    Dimmer refSample1;
    Dimmer refSample2;
    Dimmer refSample3;
    Dimmer refSample4;
    Dimmer refSample5;
    Dimmer refSample6;
    Dimmer refSample7;
}