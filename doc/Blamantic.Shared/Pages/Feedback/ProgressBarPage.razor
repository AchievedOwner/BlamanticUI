@page "/component/feedback/progress"

<Pager DataSource="@(new List<string>(new[] { 
                         "示例","进度信号","显示进度条百分比文本","激活状态","禁用状态","状态颜色","动画",
                         "动画速度","颜色","反色背景","尺寸","吸附","Progress 参数","Progress 方法","Bar 参数"
                     }))">
    <Body>
        <Header1 Divider>
            进度条
            <SubHeader>进度条显示任务的进度</SubHeader>
        </Header1>
        <PresentationPart Title="示例">
            <Description>
                一个标准的进度条。设置 <code>Percent</code> 表示进度条的宽度百分比，范围在0-100之间。
            </Description>
            <RunTemplate>
                <Progress Percent="60">
                    <Bar/>
                    <ProgressLabel>正在进行...</ProgressLabel>
                </Progress>
            </RunTemplate>
            <CodeTemplate>
@Code.GetCode(@"
```html
<Progress Percent=""60"">
    <Bar/>
    <ProgressLabel>正在进行...</ProgressLabel>
</Progress>
```
")
            </CodeTemplate>
        </PresentationPart>
                <PresentationPart Title="进度信号">
            <Description>
                设置 <code>Indicating</code> 可以让进度条随着 <code>Percent</code> 的值会有明显的红黄绿的颜色变化。
            </Description>
            <RunTemplate>
                <Progress Percent="percent" Indicating>
                    <Bar/>
                    <ProgressLabel>@percent %</ProgressLabel>
                </Progress>
                <Button Disabled="disable" @onclick="()=>Start()" Emphasis="Emphasis.Primary">开始</Button>
            </RunTemplate>
            <CodeTemplate>
@Code.GetCode(@"
```html
<Progress Percent=""percent"" Indicating>
    <Bar/>
    <ProgressLabel>@percent %</ProgressLabel>
</Progress>
<Button Disabled=""disable"" @onclick=""()=>Start()"" Emphasis=""Emphasis.Primary"">开始</Button>
```
```csharp
int percent;
bool disable;
System.Timers.Timer _timer;
protected override void OnInitialized()
{
    _timer = new System.Timers.Timer(60);
    _timer.Elapsed += async (s, e) =>
    {
        if (percent < 100)
        {
            percent++;
        }
        else
        {
            _timer.Stop();
            disable = false;
        }
        await InvokeAsync(StateHasChanged);
    };
}

void Start()
{
    percent = 0;
    disable = true;
    _timer.Start();
}
```
")
            </CodeTemplate>
        </PresentationPart>
        <PresentationPart Title="显示进度条百分比文本">
    <Description>
        设置 <code>Bar</code> 的 <code>ShowPercent</code> 会显示当前进度条的百分比文本。
    </Description>
    <RunTemplate>
        <Progress Percent="80">
            <Bar ShowPercent/>
        </Progress>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Progress Percent=""80"">
    <Bar ShowPercent/>
</Progress>
```
")
    </CodeTemplate>
</PresentationPart>
        <PresentationPart Title="自定义进度条的文本">
    <Description>
        设置 <code>Bar</code> 的 <code>Text</code> 渲染进度条内的自定义 UI 片段，其中可以用 <code>context</code> 获取进度条的百分比。
    </Description>
    <RunTemplate>
        <Progress Percent="80">
            <Bar>
                <Text>
                    当前进度为 @(context)%
                </Text>
            </Bar>
        </Progress>
        <Progress Percent="50">
            <Bar Centered>
                <Text>
                   还剩下 @(100-context)%
                </Text>
            </Bar>
        </Progress>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Progress Percent=""80"">
    <Bar>
        <Text>
            当前进度为 @(context)%
        </Text>
    </Bar>
</Progress>
<Progress Percent=""50"">
    <Bar Centered>
        <Text>
            还剩下 @(100-context)%
        </Text>
    </Bar>
</Progress>
```
")
    </CodeTemplate>
</PresentationPart>
        <PresentationPart Title="激活状态">
    <Description>
        设置 <code>Progress</code> 的 <code>Actived</code> 使组件呈现被激活的状态。
    </Description>
    <RunTemplate>
        <Progress Percent="76" Actived>
            <Bar/>
            <ProgressLabel>上传文件</ProgressLabel>
        </Progress>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Progress Percent=""76"" Actived>
    <Bar/>
    <ProgressLabel>上传文件</ProgressLabel>
</Progress>
```
")
    </CodeTemplate>
</PresentationPart>
                <PresentationPart Title="禁用状态">
    <Description>
        设置 <code>Progress</code> 的 <code>Disabled</code> 使进度条被禁用。
    </Description>
    <RunTemplate>
        <Progress Percent="43" Disabled>
            <Bar/>
            <ProgressLabel>上传文件</ProgressLabel>
        </Progress>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Progress Percent=""43"" Disabled>
    <Bar/>
    <ProgressLabel>上传文件</ProgressLabel>
</Progress>
```
")
    </CodeTemplate>
</PresentationPart>
        <PresentationPart Title="状态颜色">
    <Description>
        设置 <code>State</code> 可以呈现状态的颜色。
    </Description>
    <RunTemplate>
        <Progress Percent="100" State="State.Success">
            <Bar ShowPercent />
            <ProgressLabel>恭喜你完成训练</ProgressLabel>
        </Progress>
        <Progress Percent="100" State="State.Warning">
            <Bar ShowPercent />
            <ProgressLabel>你上传的文件超过了大小限制</ProgressLabel>
        </Progress>
        <Progress Percent="100" State="State.Error">
            <Bar ShowPercent />
            <ProgressLabel>有错误出现了</ProgressLabel>
        </Progress>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Progress Percent=""100"" State=""State.Success"">
    <Bar ShowPercent />
    <ProgressLabel>恭喜你完成训练</ProgressLabel>
</Progress>
<Progress Percent=""100"" State=""State.Warning"">
    <Bar ShowPercent />
    <ProgressLabel>你上传的文件超过了大小限制</ProgressLabel>
</Progress>
<Progress Percent=""100"" State=""State.Error"">
    <Bar ShowPercent />
    <ProgressLabel>有错误出现了</ProgressLabel>
</Progress>
```
")
    </CodeTemplate>
</PresentationPart>
        <PresentationPart Title="动画">
    <Description>
        设置 <code>Animation</code> 使进度条有动画效果。
    </Description>
    <RunTemplate>
        <Progress Percent="100" Color="Color.Blue" Animation="Progress.AnimationType.Pulsate">
            <Bar>
                <Text>脉冲(Pulsate)</Text>
            </Bar>
        </Progress>
        <Progress Percent="100" Color="Color.Blue" Animation="Progress.AnimationType.Fill">
            <Bar>
                <Text>填充(Fill)</Text>
            </Bar>
        </Progress>
        <Progress Percent="100" Color="Color.Blue" Animation="Progress.AnimationType.Slide">
            <Bar>
                <Text>幻灯(Slide)</Text>
            </Bar>
        </Progress>
        <Progress Percent="100" Color="Color.Blue" Animation="Progress.AnimationType.Swing">
            <Bar>
                <Text>两翼(Swing)</Text>
            </Bar>
        </Progress>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Progress Color=""Color.Blue"" Animation=""Progress.AnimationType.Pulsate"">
    <Bar>
        <Text>脉冲(Pulsate)</Text>
    </Bar>
</Progress>
<Progress Color=""Color.Blue"" Animation=""Progress.AnimationType.Fill"">
    <Bar>
        <Text>填充(Fill)</Text>
    </Bar>
</Progress>
<Progress Color=""Color.Blue"" Animation=""Progress.AnimationType.Slide"">
    <Bar>
        <Text>幻灯(Slide)</Text>
    </Bar>
</Progress>
<Progress Color=""Color.Blue"" Animation=""Progress.AnimationType.Swing"">
    <Bar>
        <Text>两翼(Swing)</Text>
    </Bar>
</Progress>
```
")
    </CodeTemplate>
</PresentationPart>
        <PresentationPart Title="动画速度">
    <Description>
        设置 <code>Speed</code> 可以控制动画的速度。
    </Description>
    <RunTemplate>
        <Progress Percent="100" Color="Color.Blue" Animation="Progress.AnimationType.Pulsate" Speed="Speed.Fast">
            <Bar>
                <Text>快速(Fast)</Text>
            </Bar>
        </Progress>
        <Progress Percent="100" Color="Color.Blue" Animation="Progress.AnimationType.Pulsate" Speed="Speed.Slow">
            <Bar>
                <Text>慢速(Slow)</Text>
            </Bar>
        </Progress>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Progress Percent=""100"" Color=""Color.Blue"" Animation=""Progress.AnimationType.Pulsate"" Speed=""Speed.Fast"">
    <Bar>
        <Text>快速(Fast)</Text>
    </Bar>
</Progress>
<Progress Percent=""100"" Color=""Color.Blue"" Animation=""Progress.AnimationType.Pulsate"" Speed=""Speed.Slow"">
    <Bar>
        <Text>慢速(Slow)</Text>
    </Bar>
</Progress>
```
")
    </CodeTemplate>
</PresentationPart>
        <PresentationPart Title="颜色">
    <Description>
        设置 <code>Color</code> 可以有各种颜色。
    </Description>
    <RunTemplate>
        <Progress Color="Color.Red" Percent="95">
            <Bar />
        </Progress>
        <Progress Color="Color.Green" Percent="15">
            <Bar />
        </Progress>
        <Progress Color="Color.Yellow" Percent="76">
            <Bar />
        </Progress>
        <Progress Color="Color.Pink" Percent="35">
            <Bar />
        </Progress>
        <Progress Color="Color.Olive" Percent="66">
            <Bar />
        </Progress>
        <Progress Color="Color.Orange" Percent="28">
            <Bar />
        </Progress>
        <Progress Color="Color.Black" Percent="80">
            <Bar />
        </Progress>
        <Progress Color="Color.Blue" Percent="56">
            <Bar />
        </Progress>
        <Progress Color="Color.Brown" Percent="42">
            <Bar />
        </Progress>
        <Progress Color="Color.Purple" Percent="74">
            <Bar />
        </Progress>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Progress Color=""Color.Red"" Percent=""95"">
    <Bar />
</Progress>
<Progress Color=""Color.Green"" Percent=""15"">
    <Bar />
</Progress>
<Progress Color=""Color.Yellow"" Percent=""76"">
    <Bar />
</Progress>
<Progress Color=""Color.Pink"" Percent=""35"">
    <Bar />
</Progress>
<Progress Color=""Color.Olive"" Percent=""66"">
    <Bar />
</Progress>
<Progress Color=""Color.Orange"" Percent=""28"">
    <Bar />
</Progress>
<Progress Color=""Color.Black"" Percent=""80"">
    <Bar />
</Progress>
<Progress Color=""Color.Blue"" Percent=""56"">
    <Bar />
</Progress>
<Progress Color=""Color.Brown"" Percent=""42"">
    <Bar />
</Progress>
<Progress Color=""Color.Purple"" Percent=""74"">
    <Bar />
</Progress>
```
")
    </CodeTemplate>
</PresentationPart>
        <PresentationPart Title="反色背景">
    <Description>
        设置 <code>Inverted</code> 可以使用反选背景颜色。
    </Description>
    <RunTemplate>
        <Segment Inverted>
            <Progress Color="Color.Red" Percent="95" Inverted>
                <Bar />
            </Progress>
            <Progress Color="Color.Green" Percent="15" Inverted>
                <Bar />
            </Progress>
            <Progress Color="Color.Yellow" Percent="76" Inverted>
                <Bar />
            </Progress>
            <Progress Color="Color.Pink" Percent="35" Inverted>
                <Bar />
            </Progress>
            <Progress Color="Color.Olive" Percent="66" Inverted>
                <Bar />
            </Progress>
            <Progress Color="Color.Orange" Percent="28" Inverted>
                <Bar />
            </Progress>
            <Progress Color="Color.Black" Percent="80" Inverted>
                <Bar />
            </Progress>
            <Progress Color="Color.Blue" Percent="56" Inverted>
                <Bar />
            </Progress>
            <Progress Color="Color.Brown" Percent="42" Inverted>
                <Bar />
            </Progress>
            <Progress Color="Color.Purple" Percent="74" Inverted>
                <Bar />
            </Progress>
        </Segment>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Segment Inverted>
    <Progress Color=""Color.Red"" Percent=""95"" Inverted>
        <Bar />
    </Progress>
    <Progress Color=""Color.Green"" Percent=""15"" Inverted>
        <Bar />
    </Progress>
    <Progress Color=""Color.Yellow"" Percent=""76"" Inverted>
        <Bar />
    </Progress>
    <Progress Color=""Color.Pink"" Percent=""35"" Inverted>
        <Bar />
    </Progress>
    <Progress Color=""Color.Olive"" Percent=""66"" Inverted>
        <Bar />
    </Progress>
    <Progress Color=""Color.Orange"" Percent=""28"" Inverted>
        <Bar />
    </Progress>
    <Progress Color=""Color.Black"" Percent=""80"" Inverted>
        <Bar />
    </Progress>
    <Progress Color=""Color.Blue"" Percent=""56"" Inverted>
        <Bar />
    </Progress>
    <Progress Color=""Color.Brown"" Percent=""42"" Inverted>
        <Bar />
    </Progress>
    <Progress Color=""Color.Purple"" Percent=""74"" Inverted>
        <Bar />
    </Progress>
</Segment>
```
")
    </CodeTemplate>
</PresentationPart>
        <PresentationPart Title="尺寸">
    <Description>
        设置 <code>Size</code> 可以有不同尺寸。
    </Description>
    <RunTemplate>
        <Progress Percent="81" Size="Size.Mini">
            <Bar />
        </Progress>
        <Progress Percent="95" Size="Size.Tiny">
            <Bar />
        </Progress>
        <Progress Percent="43" Size="Size.Small">
            <Bar />
        </Progress>
        <Progress Percent="50" Size="Size.Medium">
            <Bar />
        </Progress>
        <Progress Percent="66" Size="Size.Large">
            <Bar />
        </Progress>
        <Progress Percent="37" Size="Size.Big">
            <Bar />
        </Progress>
        <Progress Percent="82" Size="Size.Huge">
            <Bar />
        </Progress>
        <Progress Percent="62" Size="Size.Massive">
            <Bar />
        </Progress>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Progress Percent=""81"" Size=""Size.Mini"">
    <Bar />
</Progress>
<Progress Percent=""95"" Size=""Size.Tiny"">
    <Bar />
</Progress>
<Progress Percent=""43"" Size=""Size.Small"">
    <Bar />
</Progress>
<Progress Percent=""50"" Size=""Size.Medium"">
    <Bar />
</Progress>
<Progress Percent=""66"" Size=""Size.Large"">
    <Bar />
</Progress>
<Progress Percent=""37"" Size=""Size.Big"">
    <Bar />
</Progress>
<Progress Percent=""82"" Size=""Size.Huge"">
    <Bar />
</Progress>
<Progress Percent=""62"" Size=""Size.Massive"">
    <Bar />
</Progress>
```
")
    </CodeTemplate>
</PresentationPart>
        <PresentationPart Title="吸附">
    <Description>
        设置 <code>Attached</code> 和 <code>VerticalPosition</code> 可以吸附在其他组件上
    </Description>
    <RunTemplate>
        <Segment>
            <Progress Percent="70" Attached AttachedVertical="VerticalPosition.Top">
                <Bar />
            </Progress>
            <p>
                阿里路呀
            </p>
            <Progress Percent="40" Attached AttachedVertical="VerticalPosition.Bottom">
                <Bar />
            </Progress>
        </Segment>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Segment>
    <Progress Percent=""70"" Attached AttachedVertical=""VerticalPosition.Top"">
        <Bar />
    </Progress>
    <p>
        阿里路呀
    </p>
    <Progress Percent=""40"" Attached AttachedVertical=""VerticalPosition.Bottom"">
        <Bar />
    </Progress>
</Segment>
```
")
    </CodeTemplate>
</PresentationPart>
        <ParameterTable Title="Progress 参数">
            <Content>
                <tr>
                    <td>Percent</td>
                    <td>进度条宽度的百分比</td>
                    <td>double</td>
                    <td></td>
                </tr>
                <tr>
                    <td>Indicating</td>
                    <td>是否显示有一个明显的进度条指向效果</td>
                    <td>bool</td>
                    <td></td>
                </tr>
                <tr>
                    <td>Inverted</td>
                    <td>深色背景</td>
                    <td>bool</td>
                    <td></td>
                </tr>
                <tr>
                    <td>Percent</td>
                    <td>进度条宽度的百分比</td>
                    <td>double</td>
                    <td></td>
                </tr>
                <tr>
                    <td>Color</td>
                    <td>颜色</td>
                    <td>enum</td>
                    <td></td>
                </tr>
                <tr>
                    <td>State</td>
                    <td>状态样式</td>
                    <td>enum</td>
                    <td></td>
                </tr>
                <tr>
                    <td>Disabled</td>
                    <td>禁用状态</td>
                    <td>bool</td>
                    <td></td>
                </tr>
                <tr>
                    <td>Actived</td>
                    <td>激活状态</td>
                    <td>bool</td>
                    <td></td>
                </tr>
                <tr>
                    <td>Animation</td>
                    <td>动画效果</td>
                    <td>enum</td>
                    <td></td>
                </tr>
                <tr>
                    <td>Speed</td>
                    <td>动画速度</td>
                    <td>enum</td>
                    <td></td>
                </tr>
                <tr>
                    <td>Attached</td>
                    <td>吸附效果</td>
                    <td>bool</td>
                    <td></td>
                </tr>
                <tr>
                    <td>AttachedVertical</td>
                    <td>垂直吸附</td>
                    <td>enum</td>
                    <td></td>
                </tr>
            </Content>
        </ParameterTable>
                        <MethodTable Title="Progress 方法">
                            <Content>
                                <tr>
                                    <td>Disable(bool diabled = true)</td>
                                    <td>禁用进度条</td>
                                </tr>
                                <tr>
                                    <td>Active(bool active = true)</td>
                                    <td>激活进度条</td>
                                </tr>
                            </Content>
        </MethodTable>
        <ParameterTable Title="Bar 参数">
            <Content>
                <tr>
                    <td>ShowPercent</td>
                    <td>是否显示进度条的百分比文本</td>
                    <td>bool</td>
                    <td></td>
                </tr>
                <tr>
                    <td>Text</td>
                    <td>呈现进度条内的 UI 片段</td>
                    <td>RenderFragment&lt;double></td>
                    <td></td>
                </tr>
                <tr>
                    <td>Centered</td>
                    <td>内容文本居中</td>
                    <td>bool</td>
                    <td></td>
                </tr>
            </Content>
        </ParameterTable>
    </Body>
</Pager>

@code{
    int percent;
    bool disable;
    System.Timers.Timer _timer;
    protected override void OnInitialized()
    {
        _timer = new System.Timers.Timer(60);
        _timer.Elapsed += async (s, e) =>
        {
            if (percent < 100)
            {
                percent++;
            }
            else
            {
                _timer.Stop();
                disable = false;
            }
            await InvokeAsync(StateHasChanged);
        };
    }

    void Start()
    {
        percent = 0;
        disable = true;
        _timer.Start();
    }
}