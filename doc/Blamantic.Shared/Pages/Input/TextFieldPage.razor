@page "/component/input/textfield"

<Pager DataSource="@(new List<string>
                     {
                         "TextField","DisplayNameType","Trigger","Icon","IconMode","LabelMode","ActionMode","Transparent","Size"
                     })">
    <Body>
        <Header1 Divider>
            TextField
            <SubHeader>
                A text field used to elicit a response from a user
            </SubHeader>
        </Header1>
        <Segment>
            The Model in demo:
            @Code.GetCode(@"
```cs
class User
{
    [Display(Name = ""Account"")]
    [Required]
    public string UserName { get; set; }

    [Required]
    public string Password { get; set; }

    [Display(Name = ""Profile"")]
    [StringLength(100)]
    public string Description { get; set; }

    [Required(ErrorMessage = ""{0}不能为空"")]
    public int Age { get; set; }
}
```
")
        </Segment>
        <Message State="State.Warning">
            <code>Form</code> or <code>EditForm</code> is not required for <code>TextField</code>, but the validation from <code>EditContext</code> is out of work.
        </Message>
        <PresentationPart Title="TextField">
            <RunTemplate>
                <TextField @bind-Value="user.UserName" />
                <br />
                <TextField @bind-Value="user.Password" Type="TextFieldType.Password" />
                <br />
                <TextField @bind-Value="user.Description" Type="TextFieldType.MultiLine" Rows="6" />
                <br />
                <TextField @bind-Value="user.Age" Type="TextFieldType.Numberic" />
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<TextField @bind-Value=""user.UserName"" />
<TextField @bind-Value=""user.Password"" Type=""TextFieldType.Password"" />
<TextField @bind-Value=""user.Description"" Type=""TextFieldType.MultiLine"" Rows=""6"" />
<TextField @bind-Value=""user.Age"" Type=""TextFieldType.Numberic"" />
```
")
            </CodeTemplate>
        </PresentationPart>
        <PresentationPart>
            <Description>
                Use <code>Form</code> to render the layout, for details please see <Anchor Link="/components/input/form" Target="LinkTarget.Blank">Form</Anchor>.
            </Description>
            <RunTemplate>
                <Form Model="this">
                    <Fields>
                        <Field>
                            <TextField @bind-Value="user.UserName" />
                        </Field>
                        <Field>
                            <TextField @bind-Value="user.Password" Type="TextFieldType.Password" />
                        </Field>
                        <Field>
                            <TextField @bind-Value="user.Age" Type="TextFieldType.Numberic" />
                        </Field>
                    </Fields>
                    <Field>
                        <TextField @bind-Value="user.Description" Type="TextFieldType.MultiLine" Rows="6" />
                    </Field>
                </Form>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<Form Model=""this"">
    <Fields>
        <Field>
            <TextField @bind-Value=""user.UserName"" />
        </Field>
        <Field>
            <TextField @bind-Value=""user.Password"" Type=""TextFieldType.Password"" />
        </Field>
        <Field>
            <TextField @bind-Value=""user.Age"" Type=""TextFieldType.Numberic"" />
        </Field>
    </Fields>
    <Field>
        <TextField @bind-Value=""user.Description"" Type=""TextFieldType.MultiLine"" Rows=""6"" />
    </Field>
</Form>
```
")
            </CodeTemplate>
        </PresentationPart>
        <PresentationPart Title="DisplayNameType">
            <Description>
                Identify <code>System.ComponentModel.DataAnnotations.DisplayAttribute.Name</code> to display the label text or <code>DisplayName</code> is higher prority.
            </Description>
            <RunTemplate>
                <Form Model="user">
                    <Field>
                        <Header3>Standard</Header3>
                        <TextField @bind-Value="user.UserName" />
                        <br />
                        <Header3>Default is standard</Header3>
                        <TextField @bind-Value="user.UserName"  DisplayNameType="DisplayNameType.Label"/>
                        <br />
                        <Header3>DisplayName</Header3>
                        <TextField @bind-Value="user.UserName" DisplayName="Custom DisplayName" />
                        <br />
                        <Header3>DisplayNameType.Placeholder</Header3>
                        <TextField @bind-Value="user.UserName" DisplayNameType="DisplayNameType.Placeholder" />
                        <br />
                        <Header3>Placeholder</Header3>
                        <TextField @bind-Value="user.UserName" Placeholder="Limit in 10 characters" />
                        <br />
                        <Header3>DisplyaNameType.Placeholder and Placeholder</Header3>
                        <TextField @bind-Value="user.UserName" DisplayNameType="DisplayNameType.Placeholder" Placeholder="required" />
                    </Field>
                </Form>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<Form Model=""user"">
    <Field>
        <TextField @bind-Value=""user.UserName"" />
        <TextField @bind-Value=""user.UserName"" DisplayNameType=""DisplayNameType.Label"" />
        <TextField @bind-Value=""user.UserName"" DisplayName=""Custom DisplayName"" />
        <TextField @bind-Value=""user.UserName"" DisplayNameType=""DisplayNameType.Placeholder"" />
        <TextField @bind-Value=""user.UserName"" Placeholder=""Limit in 10 characters"" />
        <TextField @bind-Value=""user.UserName"" DisplayNameType=""DisplayNameType.Placeholder"" Placeholder=""required"" />
    </Field>
</Form>
```
")
            </CodeTemplate>
        </PresentationPart>
        <PresentationPart Title="Trigger">
            <Description>
                Change a different trigger type after binding
            </Description>
            <RunTemplate>
                <Form Model="user">
                    <Field>
                        <Header5>default is <code>oninput</code> event</Header5>
                        <TextField @bind-Value="user.UserName" />
                        <br />
                        @user.UserName
                        <br />
                        <Header5>change to <code>onchange</code></Header5>
                        <TextField @bind-Value="user.Description" Trigger="TextFieldTrigger.OnChange" />
                        <br />
                        @user.Description
                    </Field>
                </Form>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<TextField @bind-Value=""user.UserName"" />
<TextField @bind-Value=""user.Description"" Trigger=""TextFieldTrigger.OnChange"" />
```
")
            </CodeTemplate>
        </PresentationPart>
        <PresentationPart Title="Icon">
            <Description>
                Set <code>Icon</code> using icon class as <code>Icon</code> component.
            </Description>
            <RunTemplate>
                <Form Model="user">
                    <Field>
                        <TextField @bind-Value="user.UserName" Icon="user" />
                    </Field>
                </Form>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<Form Model=""user"">
    <Field>
        <TextField @bind-Value=""user.UserName"" Icon=""user"" />
    </Field>
</Form>
```
")
            </CodeTemplate>
        </PresentationPart>
        <PresentationPart Title="IconModel">
            <RunTemplate>
                <Form Model="user">
                    <Field>
                        <TextField @bind-Value="user.UserName" IconMode DisplayNameType="DisplayNameType.Placeholder">
                            <Right>
                                <Icon IconClass="search" Circular Inverted Color="Color.Pink" Linked />
                            </Right>
                        </TextField>
                        <TextField @bind-Value="user.Password" IconMode DisplayNameType="DisplayNameType.Placeholder">
                            <Left>
                                <Icon IconClass="lock" Circular Inverted Color="Color.Red" />
                            </Left>
                        </TextField>
                    </Field>
                </Form>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<Form Model=""user"">
    <Field>
        <TextField @bind-Value=""user.UserName"" IconMode DisplayNameType=""DisplayNameType.Placeholder"">
            <Right>
                <Icon IconClass=""user"" Circular Inverted Color=""Color.Pink"" />
            </Right>
        </TextField>
        <TextField @bind-Value=""user.Password"" IconMode DisplayNameType=""DisplayNameType.Placeholder"">
            <Left>
                <Icon IconClass=""lock"" Circular Inverted Color=""Color.Red"" />
            </Left>
        </TextField>
    </Field>
</Form>
```
")
            </CodeTemplate>
        </PresentationPart>
        <PresentationPart Title="LabelMode">
            <RunTemplate>
                <Form Model="user">
                    <Field>
                        <TextField @bind-Value="user.UserName" LabelMode DisplayNameType="DisplayNameType.Placeholder">
                            <Left>
                                <Label Basic>UserName</Label>
                            </Left>
                        </TextField>
                    </Field>
                    <Field>
                        <TextField @bind-Value="user.Age" LabelMode DisplayNameType="DisplayNameType.Placeholder">
                            <Right>
                                <Label>Year-Old</Label>
                            </Right>
                        </TextField>
                    </Field>
                    <Field>
                        <TextField @bind-Value="user.Age" Icon="tag" LabelMode Placeholder="Mix with Icon & Label" DisplayNameType="DisplayNameType.Placeholder">
                            <Right>
                                <Label Tag Color="Color.Orange">New Label</Label>
                            </Right>
                        </TextField>
                    </Field>
                </Form>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<Form Model=""user"">
    <Field>
        <TextField @bind-Value=""user.UserName"" LabelMode DisplayNameType=""DisplayNameType.Placeholder"">
            <Left>
                <Label Basic>UserName</Label>
            </Left>
        </TextField>
    </Field>
    <Field>
        <TextField @bind-Value=""user.Age"" LabelMode DisplayNameType=""DisplayNameType.Placeholder"">
            <Right>
                <Label>Year-Old</Label>
            </Right>
        </TextField>
    </Field>
    <Field>
        <TextField @bind-Value=""user.Age"" Icon=""tag"" LabelMode Placeholder=""Mix with Icon & Label"" DisplayNameType=""DisplayNameType.Placeholder"">
            <Right>
                <Label Tag Color=""Color.Orange"">New Label</Label>
            </Right>
        </TextField>
    </Field>
</Form>
```
")
            </CodeTemplate>
        </PresentationPart>
        <PresentationPart Title="ActionMode">
            <RunTemplate>
                <Form Model="user">
                    <Field>
                        <TextField @bind-Value="user.UserName" ActionMode DisplayNameType="DisplayNameType.Placeholder">
                            <Right>
                                <Button Color="Color.Blue">
                                    Search
                                </Button>
                            </Right>
                        </TextField>
                    </Field>
                    <Field>
                        <TextField @bind-Value="user.UserName" LabelMode ActionMode DisplayNameType="DisplayNameType.Placeholder">
                            <Left>
                                <Label>Keyword</Label>
                            </Left>
                            <Right>
                                <Button Basic Color="Color.Black">
                                    <Icon IconClass="search" />
                                </Button>
                            </Right>
                        </TextField>
                    </Field>
                    <Field>
                        <TextField @bind-Value="user.UserName" Icon="search" ActionMode DisplayNameType="DisplayNameType.Placeholder">
                            <Right>
                                <Button Animated Color="Color.Green">
                                    <Content Visibile >
                                        <Icon IconClass="cart" />
                                    </Content>
                                    <Content Hidden>
                                        Add Cart
                                    </Content>
                                </Button>
                            </Right>
                        </TextField>
                    </Field>
                </Form>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<Form Model=""user"">
    <Field>
        <TextField @bind-Value=""user.UserName"" ActionMode DisplayNameType=""DisplayNameType.Placeholder"">
            <Right>
                <Button Color=""Color.Blue"">
                    Search
                </Button>
            </Right>
        </TextField>
    </Field>
    <Field>
        <TextField @bind-Value=""user.UserName"" LabelMode ActionMode DisplayNameType=""DisplayNameType.Placeholder"">
            <Left>
                <Label>Keyword</Label>
            </Left>
            <Right>
                <Button Basic Color=""Color.Black"">
                    <Icon IconClass=""search"" />
                </Button>
            </Right>
        </TextField>
    </Field>
    <Field>
        <TextField @bind-Value=""user.UserName"" Icon=""search"" ActionMode DisplayNameType=""DisplayNameType.Placeholder"">
            <Right>
                <Button Animated Color=""Color.Green"">
                    <Content Visibile >
                        <Icon IconClass=""cart"" />
                    </Content>
                    <Content Hidden>
                        Add Cart
                    </Content>
                </Button>
            </Right>
        </TextField>
    </Field>
</Form>
```
")
            </CodeTemplate>
        </PresentationPart>
        <PresentationPart Title="Transparent">
            <RunTemplate>
                <Form Model="user">
                        <Field>
                            <TextField @bind-Value="user.Search" DisplayNameType="DisplayNameType.Placeholder" Transparent />
                        </Field>
                        <Field>
                            <TextField @bind-Value="user.Search" DisplayNameType="DisplayNameType.Placeholder" Transparent Icon="calendar" />
                        </Field>
                        <Field>
                            <TextField @bind-Value="user.Search" DisplayNameType="DisplayNameType.Placeholder" Transparent IconMode>
                                <Right>
                                    <Icon IconClass="time" Circular />
                                </Right>
                            </TextField>
                        </Field>
                </Form>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<Form Model=""user"">
        <Field>
            <TextField @bind-Value=""user.Search"" DisplayNameType=""DisplayNameType.Placeholder"" Transparent />
        </Field>
        <Field>
            <TextField @bind-Value=""user.Search"" DisplayNameType=""DisplayNameType.Placeholder"" Transparent Icon=""calendar"" />
        </Field>
        <Field>
            <TextField @bind-Value=""user.Search"" DisplayNameType=""DisplayNameType.Placeholder"" Transparent IconMode>
                <Right>
                    <Icon IconClass=""time"" Circular />
                </Right>
            </TextField>
        </Field>
</Form>
```
")
            </CodeTemplate>
        </PresentationPart>
        <PresentationPart Title="Size">
            <RunTemplate>
                <Form Model="user">
                    <TextField @bind-Value="user.Search" Size="Size.Mini" Placeholder="Mini" />
                    <TextField @bind-Value="user.Search" Size="Size.Tiny" Placeholder="Tiny" />
                    <TextField @bind-Value="user.Search" Size="Size.Small" Placeholder="Small" />
                    <TextField @bind-Value="user.Search" Size="Size.Medium" Placeholder="Medium" />
                    <TextField @bind-Value="user.Search" Size="Size.Large" Placeholder="Large" />
                    <TextField @bind-Value="user.Search" Size="Size.Big" Placeholder="Big" />
                    <TextField @bind-Value="user.Search" Size="Size.Huge" Placeholder="Huge" />
                    <TextField @bind-Value="user.Search" Size="Size.Massive" Placeholder="Massive" />
                </Form>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<Form Model=""user"">
    <TextField @bind-Value=""user.Search"" Size=""Size.Mini"" Placeholder=""Mini"" />
    <TextField @bind-Value=""user.Search"" Size=""Size.Tiny"" Placeholder=""Tiny"" />
    <TextField @bind-Value=""user.Search"" Size=""Size.Small"" Placeholder=""Small"" />
    <TextField @bind-Value=""user.Search"" Size=""Size.Medium"" Placeholder=""Medium"" />
    <TextField @bind-Value=""user.Search"" Size=""Size.Large"" Placeholder=""Large"" />
    <TextField @bind-Value=""user.Search"" Size=""Size.Big"" Placeholder=""Big"" />
    <TextField @bind-Value=""user.Search"" Size=""Size.Huge"" Placeholder=""Huge"" />
    <TextField @bind-Value=""user.Search"" Size=""Size.Massive"" Placeholder=""Massive"" />
</Form>
```
")
            </CodeTemplate>
        </PresentationPart>
    </Body>
</Pager>

@code{
    class User
    {
        [Display(Name ="Account")]
        [Required]
        public string UserName { get; set; }

        [Display]
        [Required]
        [StringLength(16, MinimumLength = 6)]
        public string Password { get; set; }

        [Display(Name ="Profile")]
        [StringLength(100)]
        public string Description { get; set; }

        [Display]
        [Required]
        public int Age { get; set; }

        public string Search { get; set; }
    }

    private User user = new User();
}