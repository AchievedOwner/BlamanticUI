@page "/component/input/datefield" 

<Pager DataSource="@(new List<string>
                     {
                         "Demo","ViewMode","Format","Disabled","Inverted"
                     })">
    <Body>
        <Header1 Divider>
            DateField
            <SubHeader>
                Combine Input and Calendar to be a new component in form.
            </SubHeader>
        </Header1>
        <Message State="State.Warning">
            Only support <code>DateTimeOffset?</code> type.
        </Message>
        <PresentationPart Title="Demo">
            <RunTemplate>
                <Form Model="this">
                    <DateField @bind-Value="Today" />
                </Form>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```cs
DateTime? Today { get; set; }
```
```html
<Form Model=""this"">
    <DateField @bind-Value=""Today"" />
</Form>
```
")
            </CodeTemplate>
        </PresentationPart>

        <PresentationPart Title="ViewMode">
            <RunTemplate>
                <Form Model="this">
                    <Fields Span="@(3)">
                        <Field>
                            <DateField @bind-Value="Year" ViewMode="CalendarViewMode.Year" placeholder="Year" />
                        </Field>
                        <Field>
                            <DateField @bind-Value="Month" ViewMode="CalendarViewMode.Month" placeholder="Month" />
                        </Field>
                        <Field>
                            <DateField @bind-Value="Today" ViewMode="CalendarViewMode.Date" placeholder="Date" />
                        </Field>
                    </Fields>
                </Form>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<Form Model=""this"">
    <Fields Span=""@(3)"">
        <Field>
            <DateField @bind-Value=""Year"" ViewMode=""CalendarViewMode.Year"" placeholder=""Year"" />
        </Field>
        <Field>
            <DateField @bind-Value=""Month"" ViewMode=""CalendarViewMode.Month"" placeholder=""Month"" />
        </Field>
        <Field>
            <DateField @bind-Value=""Today"" ViewMode=""CalendarViewMode.Date"" placeholder=""Date"" />
        </Field>
    </Fields>
</Form>
```
")
            </CodeTemplate>
        </PresentationPart>
        <PresentationPart Title="Format">
            <RunTemplate>
                <DateField @bind-Value="Today" Format="MMM,dd,yyyy" />
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<DateField @bind-Value=""Today"" Format=""MMM,dd,yyyy"" />
```
")
            </CodeTemplate>
        </PresentationPart>
        <PresentationPart Title="Disabled">
            <RunTemplate>
                <Form Model="this">
                    <DateField @bind-Value="Today" Disabled />
                </Form>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<Form Model=""this"">
    <DateField @bind-Value=""Today"" Disabled />
</Form>
```
")
            </CodeTemplate>
        </PresentationPart>
        <PresentationPart Title="Inverted">
            <RunTemplate>
                <Segment Inverted>
                    <Form Model="this">
                        <DateField @bind-Value="Today" Inverted />
                    </Form>
                </Segment>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<Segment Inverted>
    <Form Model=""this"">
        <DateField @bind-Value=""Today"" Inverted/>
    </Form>
</Segment>
```
")
            </CodeTemplate>
        </PresentationPart>
    </Body>
</Pager>
@code{
    DateTimeOffset? Today { get; set; }

    DateTimeOffset? Year { get; set; }
    DateTimeOffset? Month { get; set; }
}