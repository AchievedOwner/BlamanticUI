@page "/component/layout/header"

<Pager DataSource="Menu">
    <Body>
        <Header1 Divider>
            Header
            <SubHeader>
                A header provides a short summary of content
            </SubHeader>
        </Header1>

<PresentationPart Title="Page Headers">
    <Description>
        <p>Headers may be oriented to give the hierarchy of a section in the context of the page</p>
        <Message State="State.Info">
            Page headings are sized using rem and are not affected by surrounding content size.
        </Message>
    </Description>
    <RunTemplate>
        <Header1>Header 1</Header1>
        <ParagraphDemo />
        <Header2>Header 2</Header2>
        <ParagraphDemo />
        <Header3>Header 3</Header3>
        <ParagraphDemo />
        <Header4>Header 4</Header4>
        <ParagraphDemo />
        <Header5>Header 5</Header5>
        <ParagraphDemo />
        <Header6>Header 6</Header6>
        <ParagraphDemo />
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Header1>Header 1</Header1>
<Header2>Header 2</Header2>
<Header3>Header 3</Header3>
<Header4>Header 4</Header4>
<Header5>Header 5</Header5>
<Header6>Header 6</Header6>
```
")
    </CodeTemplate>
</PresentationPart>

<PresentationPart Title="Content Headers">
    <Description>
        Headers may be oriented to give the importance of a section in the context of the content that surrounds it

        <Message State="State.Info">
            Content headings are sized with em and are based on the font-size of their container.
        </Message>
    </Description>
    <RunTemplate>
        <Segment Vertical>
            <ContentHeader Size="Size.Massive">Massive Header</ContentHeader>
            <ParagraphDemo />
            <ContentHeader Size="Size.Huge">Huge Header</ContentHeader>
            <ParagraphDemo />
            <ContentHeader Size="Size.Large">Large Header</ContentHeader>
            <ParagraphDemo />
            <ContentHeader Size="Size.Medium">Medium Header</ContentHeader>
            <ParagraphDemo />
            <ContentHeader Size="Size.Small">Small Header</ContentHeader>
            <ParagraphDemo />
            <ContentHeader Size="Size.Tiny">Tiny Header</ContentHeader>
            <ParagraphDemo />
            <ContentHeader Size="Size.Mini">Mini Header</ContentHeader>
            <ParagraphDemo />
        </Segment>
    </RunTemplate>
    <CodeTemplate>
@Code.GetCode(@"
```html
<Segment Vertical>
    <ContentHeader Size=""Size.Massive"">Massive Header</ContentHeader>
    <ContentHeader Size=""Size.Huge"">Huge Header</ContentHeader>
    <ContentHeader Size=""Size.Large"">Large Header</ContentHeader>
    <ContentHeader Size=""Size.Medium"">Medium Header</ContentHeader>
    <ContentHeader Size=""Size.Small"">Small Header</ContentHeader>
    <ContentHeader Size=""Size.Tiny"">Tiny Header</ContentHeader>
    <ContentHeader Size=""Size.Mini"">Mini Header</ContentHeader>
</Segment>
```
")
    </CodeTemplate>
</PresentationPart>

<PresentationPart Title="Icon Headers">
    <Description>
        A header can be formatted to emphasize an icon
    </Description>
    <RunTemplate>
        <Header1>
            <Icon IconClass="plug" />
            <Content>
                Plugin
            </Content>
        </Header1>
        <ParagraphDemo />
        <Header1>
            <Icon IconClass="settings" />
            <Content>
                Account Settings
                <SubHeader>
                    Manage your account settings and set e-mail preferences.
                </SubHeader>
            </Content>
        </Header1>
        <ParagraphDemo />

        <Header5 Icon HorizontalAlignment="HorizontalAlignment.Center">
            <Icon Circular IconClass="users" />
            <Content>
                Friends
                <SubHeader>Share your activity anywhere</SubHeader>
            </Content>
        </Header5>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Header1>
    <Icon IconClass=""plug"" />
    <Content>
        Plugin
    </Content>
</Header1>

<Header1>
    <Icon IconClass=""settings"" />
    <Content>
        Account Settings
        <SubHeader>
            Manage your account settings and set e-mail preferences.
        </SubHeader>
    </Content>
</Header1>

<Header5 Icon HorizontalAlignment=""HorizontalAlignment.Center"">
    <Icon Circular IconClass=""users"" />
    <Content>
        Friends
        <SubHeader>Share your activity anywhere</SubHeader>
    </Content>
</Header5>
```
")
    </CodeTemplate>
</PresentationPart>

<PresentationPart Title="Sub Headers">
    <Description>
        Headers may be formatted to label smaller or de-emphasized content.
    </Description>
    <RunTemplate>
        <Header1 SubHeader>
            Price
        </Header1>
        ￥299.99

        <br />
        <List Horizontal>
            <Item>
                <SubHeader UI>
                    MOLLY
                </SubHeader>
                Coordinator
            </Item>
            <Item>
                <SubHeader UI>
                    Polly
                </SubHeader>
                Developer
            </Item>
            <Item>
                <SubHeader UI>
                    Phillips
                </SubHeader>
                Project Manager
            </Item>
        </List>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Header1 SubHeader>
    Price
</Header1>
￥299.99

<br />
<List Horizontal>
    <Item>
        <SubHeader UI>
            James
        </SubHeader>
        Coordinator
    </Item>
    <Item>
        <SubHeader UI>
            Polly
        </SubHeader>
        Developer
    </Item>
    <Item>
        <SubHeader UI>
            Phillips
        </SubHeader>
        Project Manager
    </Item>
</List>
```
")
    </CodeTemplate>
</PresentationPart>

<PresentationPart Title="Divider">
    <Description>
        A header can be formatted to divide itself from the content below it
    </Description>
    <RunTemplate>
        <ParagraphDemo/>
        <Header1 Divider>
            Dividing Header
        </Header1>
        <ParagraphDemo/>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Header1 Divider>
    Dividing Header
</Header1>
```
")
    </CodeTemplate>
</PresentationPart>

<PresentationPart Title="Block">
    <Description>
        A header can be formatted to appear inside a content block
    </Description>
    <RunTemplate>
        <Header2 Blocked>
            Block Header
        </Header2>
        <MediaParagraphDemo/>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Header2 Blocked>
    Block Header
</Header2>
```
")
    </CodeTemplate>
</PresentationPart>

<PresentationPart Title="Attached">
    <Description>
        A header can be attached to other content, like a segment
    </Description>
    <RunTemplate>
        <Header3 AttachedVertical="VerticalPosition.Top" Attached>
            Top Attached
        </Header3>
        <Segment Attached>
            <ParagraphDemo />
        </Segment>
        <Header3 Attached>
            Header3 Attached
        </Header3>
        <Header2 Attached>
            Header2 Attached
        </Header2>
        <Segment Attached>
            <ParagraphDemo />
        </Segment>
        <Header3 AttachedVertical="VerticalPosition.Bottom" Attached>
            Bottom Attached
        </Header3>
    </RunTemplate> 
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Header3 AttachedVertical=""VerticalPosition.Bottom"" Attached>
    Top Attached
</Header3>
<Segment Attached>
    <ParagraphDemo/>
</Segment>
<Header3 Attached>
    Header3 Attached
</Header3>
<Header2 Attached>
    Header2 Attached
</Header2>
<Segment Attached>
    <ParagraphDemo />
</Segment>
<Header3 AttachedVertical=""VerticalPosition.Bottom"" Attached>
    Bottom Attached
</Header3>
```
")
    </CodeTemplate>
</PresentationPart>

<PresentationPart Title="Floated">
    <Description>
        A header can sit to the left or right of other content
    </Description>
    <RunTemplate>
        <Segment Clear>
            <Header1 Floated="HorizontalPosition.Left">
                Go Back
            </Header1>
            <Header2 Floated="HorizontalPosition.Right">
                Go Forward
            </Header2>
        </Segment>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Header1 Floated=""HorizontalPosition.Left"">
    Go Back
</Header1>
<Header2 Floated=""HorizontalPosition.Right"">
    Go Forward
</Header2>
```
")
    </CodeTemplate>
</PresentationPart>

<PresentationPart Title="Text Alignment">
    <Description>
        A header can have its text aligned to a side
    </Description>
    <RunTemplate>
        <Header2 HorizontalAlignment="HorizontalAlignment.Right">Right</Header2>
        <Header2 HorizontalAlignment="HorizontalAlignment.Left">Left</Header2>
        <Header2 HorizontalAlignment="HorizontalAlignment.Justified">Justified</Header2>
        <Header2 HorizontalAlignment="HorizontalAlignment.Center">中间对齐</Header2>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Header2 HorizontalAlignment=""HorizontalAlignment.Right"">Right</Header2>
<Header2 HorizontalAlignment=""HorizontalAlignment.Left"">Left</Header2>
<Header2 HorizontalAlignment=""HorizontalAlignment.Justified"">Justified</Header2>
<Header2 HorizontalAlignment=""HorizontalAlignment.Center"">Center</Header2>
```
")
    </CodeTemplate>
</PresentationPart>
        <PresentationPart Title="Colored">
            <Description>
                A header can be formatted with different colors
            </Description>
    <RunTemplate>
        <Header1 Color="Color.Red">Red</Header1>
        <Header1 Color="Color.Orange">Orange</Header1>
        <Header2 Color="Color.Yellow">Yellow</Header2>
        <Header3 Color="Color.Green">Green</Header3>
        <Header4 Color="Color.Teal">Teal</Header4>
        <Header5 Color="Color.Blue">Blue</Header5>
        <Header6 Color="Color.Purple">Purple</Header6>
                
        <br />
        <Segment Inverted>
            <Header1 Color="Color.Red" Inverted>Red</Header1>
            <Header1 Color="Color.Orange" Inverted>Orange</Header1>
            <Header2 Color="Color.Yellow" Inverted>Yellow</Header2>
            <Header3 Color="Color.Green" Inverted>Green</Header3>
            <Header4 Color="Color.Teal" Inverted>Teal</Header4>
            <Header5 Color="Color.Blue" Inverted>Blue</Header5>
            <Header6 Color="Color.Purple" Inverted>Purple</Header6>
        </Segment>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Header1 Color=""Color.Red"">Red</Header>
<Header1 Color=""Color.Orange"">Orange</Header1>
<Header2 Color=""Color.Yellow"">Yellow</Header2>
<Header3 Color=""Color.Green"">Green</Header3>
<Header4 Color=""Color.Teal"">Teal</Header4>
<Header5 Color=""Color.Blue"">Blue</Header5>
<Header6 Color=""Color.Purple"">Purple</Header6>
                
<br />
<Segment Inverted>
    <Header1 Color=""Color.Red"" Inverted>Red</Header>
    <Header1 Color=""Color.Orange"" Inverted>Orange</Header1>
    <Header2 Color=""Color.Yellow"" Inverted>Yellow</Header2>
    <Header3 Color=""Color.Green"" Inverted>Green</Header3>
    <Header4 Color=""Color.Teal"" Inverted>Teal</Header4>
    <Header5 Color=""Color.Blue"" Inverted>Blue</Header5>
    <Header6 Color=""Color.Purple"" Inverted>Purple</Header6>
</Segment>
```
")
    </CodeTemplate>
</PresentationPart>
    </Body>
</Pager>
@code{
    List<string> Menu = new List<string>(new[]{
        "Page Headers","Content Headers","Icon Headers","Sub Headers","Divider","Block","Attached","Floated","Text Alignment","Colored"
        });
}