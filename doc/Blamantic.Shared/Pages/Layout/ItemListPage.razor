@page "/component/layout/itemlist"

<Pager DataSource="@(new List<string>(new[]{
                         "Demo","ImageTemplate","HeaderTemplate","DescriptionTemplate","MetaTemplate","FooterTemplate","Divider","Unstackable","Relaxed","Linked","Inverted"
                     }))">
    <Body>
        <Header1>
            Item List
            <SubHeader>
                An item view presents large collections of site content for display
            </SubHeader>
        </Header1>

        <Message State="State.Success" Icon>
            <Icon IconClass="mobile" />
            <Content>
                <Header4>
                    Responsive Element
                </Header4>
                Item views are designed to be responsive with images stacking at mobile resolutions.。
            </Content>
        </Message>

        <Segment>
            The demo code as below:
            @Code.GetCode(@"
```cs
    class Product
    {
        public int Id { get; set; }
        public string Title { get; set; }
        public string ImageSrc { get; set; } = ""img / image.png"";
        public int Price { get; set; }
        public int Number { get; set; }
    }

    IReadOnlyList<Product> Products = new List<Product>
    {
        new Product { Id = 1, Title = ""Mouse"", Price = 200, Number = 999 },
        new Product{ Id = 2, Title = ""Cow"", Price = 590, Number = 754 },
        new Product{ Id = 3, Title = ""Tiger"", Price = 1600, Number = 240 },
        new Product{ Id = 4, Title = ""Rabbit"", Price = 350, Number = 100 },
    };
```
")
        </Segment>
        <PresentationPart Title="Demo">
            <RunTemplate>
                <ItemList DataSource="Products">
                    <ImageTemplate>
                        <Image Src="@(context.ImageSrc)" />
                    </ImageTemplate>
                    <HeaderTemplate>
                        @context.Title
                    </HeaderTemplate>
                    <DescriptionTemplate>
                        <ParagraphDemo />
                    </DescriptionTemplate>
                    <MetaTemplate>
                        <span>$@context.Price</span>
                        <span>@context.Number remain</span>
                    </MetaTemplate>
                    <FooterTemplate>
                        Additional Details
                    </FooterTemplate>
                </ItemList>
            </RunTemplate>
            <CodeTemplate>
@Code.GetCode(@"
```html
<ItemList DataSource=""Products"">
    <ImageTemplate>
        <Image Src=""@(context.ImageSrc)"" />
    </ImageTemplate>
    <HeaderTemplate>
        @context.Title
    </HeaderTemplate>
    <DescriptionTemplate>
        <ParagraphDemo />
    </DescriptionTemplate>
    <MetaTemplate>
        <span>$@context.Price</span>
        <span>@context.Number remain</span>
    </MetaTemplate>
    <FooterTemplate>
        Additional Details
    </FooterTemplate>
</ItemList>
```
")
            </CodeTemplate>
        </PresentationPart>
        
        <PresentationPart Title="ImageTemplate">
            <Description>
                <code>ImageTemplate</code> is an UI to content display at left side of item.
            </Description>
            <RunTemplate>
                <ItemList DataSource="Products">
                    <ImageTemplate>
                        <Image Src="@(context.ImageSrc)" />
                    </ImageTemplate>
                </ItemList>
            </RunTemplate>
            <CodeTemplate>
@Code.GetCode(@"
```html
<ItemList DataSource=""Products"">
    <ImageTemplate>
        <Image Src=""@(context.ImageSrc)"" />
    </ImageTemplate>
</ItemList>
```
")
            </CodeTemplate>
        </PresentationPart>

        
        <PresentationPart Title="HeaderTemplate">
            <Description>
                <code>HeaderTemplate</code> is an UI content to display title at right top for each item.
            </Description>
            <RunTemplate>
                <ItemList DataSource="Products">
                    <HeaderTemplate>
                        <Header2>
                            @context.Title
                        </Header2>
                    </HeaderTemplate>
                </ItemList>
            </RunTemplate>
            <CodeTemplate>
@Code.GetCode(@"
```html
<ItemList DataSource=""Products"">
    <HeaderTemplate>
        <Header2>
            @context.Title
        </Header2>
    </HeaderTemplate>
</ItemList>
```
")
            </CodeTemplate>
        </PresentationPart>

        
        <PresentationPart Title="DescriptionTemplate">
            <Description>
                <code>DescriptionTemplate</code> is an UI to content display paragraphs at right middle for each item.
            </Description>
            <RunTemplate>
                <ItemList DataSource="Products">
                    <HeaderTemplate>
                        <Header2>
                            @context.Title
                        </Header2>
                    </HeaderTemplate>
                    <DescriptionTemplate>
                        <ParagraphDemo/>
                    </DescriptionTemplate>
                </ItemList>
            </RunTemplate>
            <CodeTemplate>
@Code.GetCode(@"
```html
<ItemList DataSource=""Products"">
    <HeaderTemplate>
        <Header2>
            @context.Title
        </Header2>
    </HeaderTemplate>
    <DescriptionTemplate>
       ......
    </DescriptionTemplate>
</ItemList>
```
")
            </CodeTemplate>
        </PresentationPart>

        
        <PresentationPart Title="MetaTemplate">
            <Description>
                All child elements will automatically be spaced.
            </Description>
            <RunTemplate>
                <ItemList DataSource="Products">
                    <HeaderTemplate>
                        <Header2>
                            @context.Title
                        </Header2>
                    </HeaderTemplate>
                    <MetaTemplate>
                        <span>
                           $ @context.Price
                        </span>
                        <span>
                            <Label>@context.Number</Label>
                        </span>
                    </MetaTemplate>
                    <DescriptionTemplate>
                        <ParagraphDemo/>
                    </DescriptionTemplate>
                </ItemList>
            </RunTemplate>
            <CodeTemplate>
@Code.GetCode(@"
```html
<ItemList DataSource=""Products"">
    <HeaderTemplate>
        <Header2>
            @context.Title
        </Header2>
    </HeaderTemplate>
    <MetaTemplate>
        <span>
            $ @context.Price
        </span>
        <span>
            <Label>@context.Number</Label>
        </span>
    </MetaTemplate>
    <DescriptionTemplate>
       ......
    </DescriptionTemplate>
</ItemList>
```
")
            </CodeTemplate>
        </PresentationPart>
        <PresentationPart Title="FooterTemplate">
            <Description>
                To be formatted separately from the main content
            </Description>
            <RunTemplate>
                <ItemList DataSource="Products">
                    <HeaderTemplate>
                        <Header2>
                            @context.Title
                        </Header2>
                    </HeaderTemplate>
                    <DescriptionTemplate>
                        <ParagraphDemo/>
                    </DescriptionTemplate>
                    <FooterTemplate>
                        <Icon IconClass="list" Color="Color.Green"/> @context.Number
                    </FooterTemplate>
                </ItemList>
            </RunTemplate>
            <CodeTemplate>
@Code.GetCode(@"
```html
<ItemList DataSource=""Products"">
    <HeaderTemplate>
        <Header2>
            @context.Title
        </Header2>
    </HeaderTemplate>
    <DescriptionTemplate>
       ......
    </DescriptionTemplate>
    <FooterTemplate>
        <Icon IconClass=""list"" Color=""Color.Green""/> @context.Number
    </FooterTemplate>
</ItemList>
```
")
            </CodeTemplate>
        </PresentationPart>

        <PresentationPart Title="Divider">
            <Description>
                Display a divider between each item.
            </Description>            
            <RunTemplate>
                <ItemList DataSource="Products" Divider>
                    <ImageTemplate>
                        <Image Src="@(context.ImageSrc)" />
                    </ImageTemplate>
                    <HeaderTemplate>
                        @context.Title
                    </HeaderTemplate>
                    <DescriptionTemplate>
                        <ParagraphDemo />
                    </DescriptionTemplate>
                    <MetaTemplate>
                        <span>$@context.Price</span>
                        <span>@context.Number remain</span>
                    </MetaTemplate>
                    <FooterTemplate>
                        Additional Details
                    </FooterTemplate>
                </ItemList>
            </RunTemplate>
            <CodeTemplate>
@Code.GetCode(@"
```html
<ItemList DataSource=""Products"" Divider>
    <ImageTemplate>
        <Image Src=""@(context.ImageSrc)"" />
    </ImageTemplate>
    <HeaderTemplate>
        @context.Title
    </HeaderTemplate>
    <DescriptionTemplate>
        <ParagraphDemo />
    </DescriptionTemplate>
    <MetaTemplate>
        <span>$@context.Price</span>
        <span>@context.Number remain</span>
    </MetaTemplate>
    <FooterTemplate>
        Additional Details
    </FooterTemplate>
</ItemList>
```
")
            </CodeTemplate>
        </PresentationPart>

        
        <PresentationPart Title="Unstackable">
            <Description>
                Cancel the stackable in responsive device.
            </Description>            
            <RunTemplate>                
                <ItemList DataSource="Products" Unstackable>
                    <ImageTemplate>
                        <Image Src="@(context.ImageSrc)" />
                    </ImageTemplate>
                    <HeaderTemplate>
                        @context.Title
                    </HeaderTemplate>
                    <DescriptionTemplate>
                        <ParagraphDemo />
                    </DescriptionTemplate>
                    <MetaTemplate>
                        <span>$@context.Price</span>
                        <span>@context.Number remain</span>
                    </MetaTemplate>
                    <FooterTemplate>
                        Additional Details
                    </FooterTemplate>
                </ItemList>
            </RunTemplate>
            <CodeTemplate>
@Code.GetCode(@"
```html
<ItemList DataSource=""Products"" Unstackable>
    <ImageTemplate>
        <Image Src=""@(context.ImageSrc)"" />
    </ImageTemplate>
    <HeaderTemplate>
        @context.Title
    </HeaderTemplate>
    <DescriptionTemplate>
        <ParagraphDemo />
    </DescriptionTemplate>
    <MetaTemplate>
        <span>$@context.Price</span>
        <span>@context.Number remain</span>
    </MetaTemplate>
    <FooterTemplate>
        Additional Details
    </FooterTemplate>
</ItemList>
```
")
            </CodeTemplate>
        </PresentationPart>

        
        <PresentationPart Title="Relaxed">
            <Description>
                A group of items can relax its padding to provide more negative space
            </Description>            
            <RunTemplate>
                <ItemList DataSource="Products" Relaxed>
                    <ImageTemplate>
                        <Image Src="@(context.ImageSrc)" />
                    </ImageTemplate>
                    <HeaderTemplate>
                        @context.Title
                    </HeaderTemplate>
                    <DescriptionTemplate>
                        <ParagraphDemo />
                    </DescriptionTemplate>
                    <MetaTemplate>
                        <span>$@context.Price</span>
                        <span>@context.Number remain</span>
                    </MetaTemplate>
                    <FooterTemplate>
                        Additional Details
                    </FooterTemplate>
                </ItemList>


                <ItemList DataSource="Products" Very Relaxed>
                    <ImageTemplate>
                        <Image Src="@(context.ImageSrc)" />
                    </ImageTemplate>
                    <HeaderTemplate>
                        @context.Title
                    </HeaderTemplate>
                    <DescriptionTemplate>
                        <ParagraphDemo />
                    </DescriptionTemplate>
                    <MetaTemplate>
                        <span>$@context.Price</span>
                        <span>@context.Number remain</span>
                    </MetaTemplate>
                    <FooterTemplate>
                        Additional Details
                    </FooterTemplate>
                </ItemList>
            </RunTemplate>
            <CodeTemplate>
@Code.GetCode(@"
```html
<ItemList DataSource=""Products"" Relaxed>
    <ImageTemplate>
        <Image Src=""@(context.ImageSrc)"" />
    </ImageTemplate>
    <HeaderTemplate>
        @context.Title
    </HeaderTemplate>
    <DescriptionTemplate>
        <ParagraphDemo />
    </DescriptionTemplate>
    <MetaTemplate>
        <span>$@context.Price</span>
        <span>@context.Number remain</span>
    </MetaTemplate>
    <FooterTemplate>
        Additional Details
    </FooterTemplate>
</ItemList>


<ItemList DataSource=""Products"" Very Relaxed>
    <ImageTemplate>
        <Image Src=""@(context.ImageSrc)"" />
    </ImageTemplate>
    <HeaderTemplate>
        @context.Title
    </HeaderTemplate>
    <DescriptionTemplate>
        <ParagraphDemo />
    </DescriptionTemplate>
    <MetaTemplate>
        <span>$@context.Price</span>
        <span>@context.Number remain</span>
    </MetaTemplate>
    <FooterTemplate>
        Additional Details
    </FooterTemplate>
</ItemList>
```
")
            </CodeTemplate>
        </PresentationPart>

        
        <PresentationPart Title="Linked">
            <Description>
                An item can be formatted so that the entire contents link to another page
            </Description>            
            <RunTemplate>
                <ItemList DataSource="Products" Linked>
                    <ImageTemplate>
                        <Image Src="@(context.ImageSrc)" />
                    </ImageTemplate>
                    <HeaderTemplate>
                        @context.Title
                    </HeaderTemplate>
                    <DescriptionTemplate>
                        <ParagraphDemo />
                    </DescriptionTemplate>
                    <MetaTemplate>
                        <span>$@context.Price</span>
                        <span>@context.Number remain</span>
                    </MetaTemplate>
                    <FooterTemplate>
                        Additional Details
                    </FooterTemplate>
                </ItemList>
            </RunTemplate>
            <CodeTemplate>
@Code.GetCode(@"
```html
<ItemList DataSource=""Products"" Linked>
    <ImageTemplate>
        <Image Src=""@(context.ImageSrc)"" />
    </ImageTemplate>
    <HeaderTemplate>
        @context.Title
    </HeaderTemplate>
    <DescriptionTemplate>
        <ParagraphDemo />
    </DescriptionTemplate>
    <MetaTemplate>
        <span>$@context.Price</span>
        <span>@context.Number remain</span>
    </MetaTemplate>
    <FooterTemplate>
        Additional Details
    </FooterTemplate>
</ItemList>
```
")
            </CodeTemplate>
        </PresentationPart>

        
        
        <PresentationPart Title="Inverted">
            <Description>
                An item can be inverted to appear on a dark background
            </Description>            
            <RunTemplate>
                <Segment Inverted>
                    <ItemList DataSource="Products" Inverted>
                        <ImageTemplate>
                            <Image Src="@(context.ImageSrc)" />
                        </ImageTemplate>
                        <HeaderTemplate>
                            @context.Title
                        </HeaderTemplate>
                        <DescriptionTemplate>
                            <ParagraphDemo />
                        </DescriptionTemplate>
                        <MetaTemplate>
                            <span>$@context.Price</span>
                            <span>@context.Number remain</span>
                        </MetaTemplate>
                        <FooterTemplate>
                            Additional Details
                        </FooterTemplate>
                    </ItemList>
                </Segment>
            </RunTemplate>
            <CodeTemplate>
@Code.GetCode(@"
```html
<ItemList DataSource=""Products"" Inverted>
    <ImageTemplate>
        <Image Src=""@(context.ImageSrc)"" />
    </ImageTemplate>
    <HeaderTemplate>
        @context.Title
    </HeaderTemplate>
    <DescriptionTemplate>
        <ParagraphDemo />
    </DescriptionTemplate>
    <MetaTemplate>
        <span>$@context.Price</span>
        <span>@context.Number remain</span>
    </MetaTemplate>
    <FooterTemplate>
        Additional Details
    </FooterTemplate>
</ItemList>
```
")
            </CodeTemplate>
        </PresentationPart>
    </Body>
</Pager>

@code{
    class Product
    {
        public int Id { get; set; }
        public string Title { get; set; }
        public string ImageSrc { get; set; } = "img/image.png";
        public int Price { get; set; }
        public int Number { get; set; }
    }

    IReadOnlyList<Product> Products = new List<Product>
    {
        new Product { Id = 1, Title = "Mouse", Price = 200, Number = 999 },
        new Product{ Id = 2, Title = "Cow", Price = 590, Number = 754 },
        new Product{ Id = 3, Title = "Tiger", Price = 1600, Number = 240 },
        new Product{ Id = 4, Title = "Rabbit", Price = 350, Number = 100 },
    };
}