@page "/component/layout/grid"
<Pager DataSource="Menu">
    <Body>
        <Header2 Divider>
            Grid
            <SubHeader>
                A grid is used to harmonize negative space in a layout
            </SubHeader>
        </Header2>

        <PresentationPart Title="Demo" Id="grid">
            <Description>
                All grid systems choose an arbitrary 16 columns count to allow per row.
            </Description>
            <RunTemplate>
                <Grid>
                    <GridColumn Color="Color.Grey">...</GridColumn>
                    <GridColumn Color="Color.Olive">...</GridColumn>
                    <GridColumn Color="Color.Grey">...</GridColumn>
                    <GridColumn Color="Color.Olive">...</GridColumn>
                    <GridColumn Color="Color.Grey">...</GridColumn>
                    <GridColumn Color="Color.Olive">...</GridColumn>
                    <GridColumn Color="Color.Grey">...</GridColumn>
                    <GridColumn Color="Color.Olive">...</GridColumn>
                    <GridColumn Color="Color.Grey">...</GridColumn>
                    <GridColumn Color="Color.Olive">...</GridColumn>
                    <GridColumn Color="Color.Grey">...</GridColumn>
                    <GridColumn Color="Color.Olive">...</GridColumn>
                    <GridColumn Color="Color.Grey">...</GridColumn>
                    <GridColumn Color="Color.Olive">...</GridColumn>
                    <GridColumn Color="Color.Grey">...</GridColumn>
                    <GridColumn Color="Color.Olive">...</GridColumn>
                </Grid>
            </RunTemplate>
            <CodeTemplate>
        @Code.GetCode(@"
```html
<Grid>
    <GridColumn>...</GridColumn>
    <GridColumn>...</GridColumn>
    <GridColumn>...</GridColumn>
    <GridColumn>...</GridColumn>
    <GridColumn>...</GridColumn>
</Grid>
```
")
            </CodeTemplate>
        </PresentationPart>


        <PresentationPart Title="GridColumn Span" Id="width-count">
            <Description>
                GridColumn widths can be specified using <code>ColSpan</code> . If a column cannot fit in a row it will automatically flow to the next row
            </Description>
            <RunTemplate>
                <Grid>
                    <GridColumn Color="Color.Grey" Span="ColSpan.Four4">Four4</GridColumn>
                    <GridColumn Color="Color.Olive" Span="ColSpan.Four4">Four4</GridColumn>
                    <GridColumn Color="Color.Grey" Span="ColSpan.Four4">Four4</GridColumn>
                    <GridColumn Color="Color.Olive" Span="ColSpan.Four4">Four4</GridColumn>
                    <GridColumn Color="Color.Grey" Span="ColSpan.Seven7">Seven7</GridColumn>
                    <GridColumn Color="Color.Olive" Span="ColSpan.Three3">Three3</GridColumn>
                    <GridColumn Color="Color.Grey" Span="ColSpan.Four4">Four4</GridColumn>
                    <GridColumn Color="Color.Olive" Span="ColSpan.Six6">Six6</GridColumn>
                </Grid>
            </RunTemplate>
            <CodeTemplate>
        @Code.GetCode(@"
```html
<Grid>
    <GridColumn Span=""ColSpan.Four4"">Four4</GridColumn>
    <GridColumn Span=""ColSpan.Four4"">Four4</GridColumn>
    <GridColumn Span=""ColSpan.Four4"">Four4</GridColumn>
    <GridColumn Span=""ColSpan.Four4"">Four4</GridColumn>
    <GridColumn Span=""ColSpan.Seven7"">Seven7</GridColumn>
    <GridColumn Span=""ColSpan.Three3"">Three3</GridColumn>
    <GridColumn Span=""ColSpan.Four4"">Four4</GridColumn>
    <GridColumn Span=""ColSpan.Six6"">Six6</GridColumn>
</Grid>
```
")
            </CodeTemplate>
        </PresentationPart>

        <PresentationPart Title="GridRow" Id="row">
            <Description>GridRow wrappers allow you to apply variations to a group of columns.</Description>
            <RunTemplate>
                <Grid>
                    <GridRow>
                        <GridColumn Color="Color.Grey" Span="ColSpan.Four4">Four4</GridColumn>
                        <GridColumn Color="Color.Olive" Span="ColSpan.Four4">Four4</GridColumn>
                        <GridColumn Color="Color.Grey" Span="ColSpan.Four4">Four4</GridColumn>
                    </GridRow>
                    <GridRow>
                        <GridColumn Color="Color.Grey" Span="ColSpan.Seven7">Seven7</GridColumn>
                        <GridColumn Color="Color.Olive" Span="ColSpan.Three3">Three3</GridColumn>
                        <GridColumn Color="Color.Grey" Span="ColSpan.Four4">Four4</GridColumn>
                    </GridRow>
                    <GridRow>
                        <GridColumn Color="Color.Olive" Span="ColSpan.Six6">Six6</GridColumn>
                    </GridRow>
                </Grid>
            </RunTemplate>
            <CodeTemplate>
        @Code.GetCode(@"
```html
<Grid>
    <GridRow>
        <GridColumn Color=""Color.Grey"" Span=""ColSpan.Four4"">Four4</GridColumn>
        <GridColumn Color=""Color.Olive"" Span=""ColSpan.Four4"">Four4</GridColumn>
        <GridColumn Color=""Color.Grey"" Span=""ColSpan.Four4"">Four4</GridColumn>
    </GridRow>
    <GridRow>
        <GridColumn Color=""Color.Grey"" Span=""ColSpan.Seven7"">Seven7</GridColumn>
        <GridColumn Color=""Color.Olive"" Span=""ColSpan.Three3"">Three3</GridColumn>
        <GridColumn Color=""Color.Grey"" Span=""ColSpan.Four4"">Four4</GridColumn>
    </GridRow>
    <GridRow>
        <GridColumn Color=""Color.Olive"" Span=""ColSpan.Six6"">Six6</GridColumn>
    </GridRow>
</Grid>
```
")
            </CodeTemplate>
        </PresentationPart>

        <PresentationPart Title="Span In GridRow" Id="row-width-count">
            <RunTemplate>
                <Grid>
                    <GridRow Span="ColSpan.Three3">
                        <GridColumn Color="Color.Grey">Three3</GridColumn>
                        <GridColumn Color="Color.Olive">Three3</GridColumn>
                        <GridColumn Color="Color.Grey">Three3</GridColumn>
                    </GridRow>
                    <GridRow Span="ColSpan.Six6">
                        <GridColumn Color="Color.Grey">Six6</GridColumn>
                        <GridColumn Color="Color.Olive">Six6</GridColumn>
                        <GridColumn Color="Color.Grey">Six6</GridColumn>
                        <GridColumn Color="Color.Olive">Six6</GridColumn>
                        <GridColumn Color="Color.Grey">Six6</GridColumn>
                        <GridColumn Color="Color.Olive">Six6</GridColumn>
                        <GridColumn Color="Color.Olive">Six6</GridColumn>
                    </GridRow>
                    <GridRow Span="ColSpan.Four4">
                        <GridColumn Color="Color.Grey">Four4</GridColumn>
                        <GridColumn Color="Color.Olive">Four4</GridColumn>
                    </GridRow>
                </Grid>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<Grid>
    <GridRow Span=""ColSpan.Three3"">
        <GridColumn Color=""Color.Grey"">Three3</GridColumn>
        <GridColumn Color=""Color.Olive"">Three3</GridColumn>
        <GridColumn Color=""Color.Grey"">Three3</GridColumn>
    </GridRow>
    <GridRow Span=""ColSpan.Six6"">
        <GridColumn Color=""Color.Grey"">Six6</GridColumn>
        <GridColumn Color=""Color.Olive"">Six6</GridColumn>
        <GridColumn Color=""Color.Grey"">Six6</GridColumn>
        <GridColumn Color=""Color.Olive"">Six6</GridColumn>
        <GridColumn Color=""Color.Grey"">Six6</GridColumn>
        <GridColumn Color=""Color.Olive"">Six6</GridColumn>
        <GridColumn Color=""Color.Olive"">Six6</GridColumn>
    </GridRow>
    <GridRow Span=""ColSpan.Four4"">
        <GridColumn Color=""Color.Grey"">Four4</GridColumn>
        <GridColumn Color=""Color.Olive"">Four4</GridColumn>
    </GridRow>
</Grid>
```
")
            </CodeTemplate>
        </PresentationPart>


        <PresentationPart Title="Span In Grid">
            <RunTemplate>
                <Grid Span="ColSpan.Four4">
                    <GridColumn Color="Color.Grey">Three3</GridColumn>
                    <GridColumn Color="Color.Olive">Three3</GridColumn>
                    <GridColumn Color="Color.Grey">Three3</GridColumn>
                    <GridColumn Color="Color.Grey">Six6</GridColumn>
                    <GridColumn Color="Color.Olive">Six6</GridColumn>
                    <GridColumn Color="Color.Grey">Six6</GridColumn>
                    <GridColumn Color="Color.Olive">Six6</GridColumn>
                    <GridColumn Color="Color.Grey">Six6</GridColumn>
                    <GridColumn Color="Color.Olive">Six6</GridColumn>
                    <GridColumn Color="Color.Olive">Six6</GridColumn>
                    <GridColumn Color="Color.Grey">Four4</GridColumn>
                    <GridColumn Color="Color.Olive">Four4</GridColumn>
                </Grid>
            </RunTemplate>
            <CodeTemplate>
@Code.GetCode(@"
```html
<Grid Span=""ColSpan.Four4"">
    <GridColumn Color=""Color.Grey"">Three3</GridColumn>
    <GridColumn Color=""Color.Olive"">Three3</GridColumn>
    <GridColumn Color=""Color.Grey"">Three3</GridColumn>
    <GridColumn Color=""Color.Grey"">Six6</GridColumn>
    <GridColumn Color=""Color.Olive"">Six6</GridColumn>
    <GridColumn Color=""Color.Grey"">Six6</GridColumn>
    <GridColumn Color=""Color.Olive"">Six6</GridColumn>
    <GridColumn Color=""Color.Grey"">Six6</GridColumn>
    <GridColumn Color=""Color.Olive"">Six6</GridColumn>
    <GridColumn Color=""Color.Olive"">Six6</GridColumn>
    <GridColumn Color=""Color.Grey"">Four4</GridColumn>
    <GridColumn Color=""Color.Olive"">Four4</GridColumn>
</Grid>
```
")
            </CodeTemplate>
        </PresentationPart>

        <PresentationPart Title="Equal Width" Id="equal-width">
            <Description>
                The row will automatically divide column width evenly. This is useful with dynamic content where you do not know the column count in advance.
            </Description>
            <RunTemplate>
                <Grid EqualWidth>
                    <GridColumn Color="Color.Grey">...</GridColumn>
                    <GridColumn Color="Color.Olive">...</GridColumn>
                    <GridColumn Color="Color.Grey">...</GridColumn>
                    <GridRow EqualWidth>
                        <GridColumn Color="Color.Olive">...</GridColumn>
                        <GridColumn Color="Color.Grey">...</GridColumn>
                    </GridRow>
                </Grid>
            </RunTemplate>
            <CodeTemplate>
        @Code.GetCode(@"
```html
<Grid EqualWidth>
    <GridColumn Color=""Color.Grey"">...</GridColumn>
    <GridColumn Color=""Color.Olive"">...</GridColumn>
    <GridColumn Color=""Color.Grey"">...</GridColumn>
    <GridRow EqualWidth>
        <GridColumn Color=""Color.Olive"">...</GridRow>
</Grid>
```
")
            </CodeTemplate>
        </PresentationPart>

        <PresentationPart Title="Centering Content" Id="centered">
            <Description>
                If a row does not take up all sixteen grid columns, you can use a centered variation to center the column contents inside the grid.
            </Description>
            <RunTemplate>
                <Grid Centered Span="ColSpan.Two2">
                    <GridColumn Color="Color.Grey">...</GridColumn>
                    <GridRow Centered Span="ColSpan.Four4">
                        <GridColumn Color="Color.Grey">...</GridColumn>
                        <GridColumn Color="Color.Olive">...</GridColumn>
                    </GridRow>
                    <GridRow Centered Span="ColSpan.Five5">
                        <GridColumn Color="Color.Grey">...</GridColumn>
                        <GridColumn Color="Color.Olive">...</GridColumn>
                        <GridColumn Color="Color.Grey">...</GridColumn>
                    </GridRow>
                </Grid>
            </RunTemplate>
            <CodeTemplate>
        @Code.GetCode(@"
```html
<Grid Centered Span=""ColSpan.Two2"">
    <GridColumn Color=""Color.Grey"">...</GridColumn>
    <GridColumn Color=""Color.Olive"">...</GridColumn>
    </GridRow>
    <GridRow Centered Span=""ColSpan.Five5"">
        <GridColumn Color=""Color.Grey"">...</GridColumn>
        <GridColumn Color=""Color.Olive"">...</GridColumn>
        <GridColumn Color=""Color.Grey"">...</GridColumn>
    </GridRow>
</Grid>
```
")
            </CodeTemplate>
        </PresentationPart>

        <PresentationPart Title="Floated" Id="floated">
            <Description>
                A column can sit flush against the left or right edge of a row
            </Description>
            <RunTemplate>
                <Grid>
                    <GridRow Span="ColSpan.Four4">
                        <GridColumn Floated="HorizontalPosition.Left" Color="Color.Grey">Left</GridColumn>
                        <GridColumn Floated="HorizontalPosition.Right" Color="Color.Grey">Right</GridColumn>
                    </GridRow>
                    <GridRow Span="ColSpan.Four4">
                        <GridColumn Color="Color.Grey">...</GridColumn>
                        <GridColumn Color="Color.Olive">...</GridColumn>
                        <GridColumn Color="Color.Grey">...</GridColumn>
                        <GridColumn Color="Color.Olive">...</GridColumn>
                    </GridRow>
                    <GridRow Span="ColSpan.Eight8" Centered>
                        <GridColumn Color="Color.Grey">...</GridColumn>
                        <GridColumn Color="Color.Olive">...</GridColumn>
                        <GridColumn Color="Color.Grey">...</GridColumn>
                    </GridRow>
                </Grid>
            </RunTemplate>
            <CodeTemplate>
        @Code.GetCode(@"
```html
<Grid>
    <GridRow Span=""ColSpan.Four4"">
        <GridColumn Floated=""HorizontalPosition.Left"" Color=""Color.Grey"">左浮动</GridColumn>
        <GridColumn Floated=""HorizontalPosition.Right"" Color=""Color.Grey"">左浮动</GridColumn>
    </GridRow>
    <GridRow Span=""ColSpan.Four4"">
        <GridColumn Color=""Color.Grey"">...</GridColumn>
        <GridColumn Color=""Color.Olive"">...</GridColumn>
        <GridColumn Color=""Color.Grey"">...</GridColumn>
        <GridColumn Color=""Color.Olive"">...</GridColumn>
    </GridRow>
    <GridRow Span=""ColSpan.Eight8"" Centered>
        <GridColumn Color=""Color.Grey"">...</GridColumn>
        <GridColumn Color=""Color.Olive"">...</GridColumn>
        <GridColumn Color=""Color.Grey"">...</GridColumn>
    </GridRow>
</Grid>
```
")
            </CodeTemplate>
        </PresentationPart>

        <PresentationPart Title="Divider">
            <Description>
                A grid can have dividers between its columns. It needs <code>GridRow</code> component.
            </Description>
            <RunTemplate>
                <Grid Divider EqualWidth>
                    <GridRow>
                        <GridColumn><Image Src="/img/media-paragraph.png" /></GridColumn>
                        <GridColumn><Image Src="/img/media-paragraph.png" /></GridColumn>
                        <GridColumn><Image Src="/img/media-paragraph.png" /></GridColumn>
                    </GridRow>
                    <GridRow>
                        <GridColumn><Image Src="/img/media-paragraph.png" /></GridColumn>
                        <GridColumn><Image Src="/img/media-paragraph.png" /></GridColumn>
                        <GridColumn><Image Src="/img/media-paragraph.png" /></GridColumn>
                    </GridRow>
                </Grid>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<Grid Divider>
    <GridRow>
        <GridColumn><Image Src=""/img/media-paragraph.png"" /></GridColumn>
        <GridColumn><Image Src=""/img/media-paragraph.png"" /></GridColumn>
        <GridColumn><Image Src=""/img/media-paragraph.png"" /></GridColumn>
    </GridRow>
    <GridRow>
        <GridColumn><Image Src=""/img/media-paragraph.png"" /></GridColumn>
        <GridColumn><Image Src=""/img/media-paragraph.png"" /></GridColumn>
        <GridColumn><Image Src=""/img/media-paragraph.png"" /></GridColumn>
    </GridRow>
</Grid>
```
")
            </CodeTemplate>
        </PresentationPart>
        <PresentationPart Title="Vertical Divider">
            <Description>
                A grid can have dividers between rows
            </Description>
            <RunTemplate>
                <Grid Vertical Divider EqualWidth>
                    <GridRow>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                    </GridRow>
                    <GridRow>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                    </GridRow>
                </Grid>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<Grid Vertical Divider>
    <GridRow>
        <GridColumn><Image Src=""/img/image.png"" /></GridColumn>
        <GridColumn><Image Src=""/img/image.png"" /></GridColumn>
    </GridRow>
    <GridRow>
        <GridColumn><Image Src=""/img/image.png"" /></GridColumn>
        <GridColumn><Image Src=""/img/image.png"" /></GridColumn>
        <GridColumn><Image Src=""/img/image.png"" /></GridColumn>
    </GridRow>
</Grid>
```
")
            </CodeTemplate>
        </PresentationPart>

        <PresentationPart Title="Celled" Id="celled">
            <Description>
                A grid can have rows divided into cells
            </Description>
            <RunTemplate>
                <Grid Celled EqualWidth>
                    <GridRow>
                        <GridColumn Span="ColSpan.Two2">
                            <Image Src="img/image.png" />
                        </GridColumn>
                        <GridColumn>
                            <ParagraphDemo FullWidth />
                        </GridColumn>
                    </GridRow>
                    <GridRow>
                        <GridColumn Span="ColSpan.Two2">
                            <Image Src="img/image.png" />
                        </GridColumn>
                        <GridColumn Span="ColSpan.Ten10">
                            <ParagraphDemo FullWidth />
                        </GridColumn>
                        <GridColumn Span="ColSpan.Two2">
                            <Image Src="img/image.png" />
                        </GridColumn>
                    </GridRow>
                </Grid>
            </RunTemplate>
            <CodeTemplate>
        @Code.GetCode(@"
```html
<Grid Celled>
    <GridRow>
        <GridColumn Span=""ColSpan.Two2"">
            <Image Source=""img/image.png"" />
        </GridColumn>
        <GridColumn>
            <ParagraphDemo />
        </GridColumn>
    </GridRow>
    <GridRow>
        <GridColumn Span=""ColSpan.Two2"">
            <Image Source=""img/image.png"" />
        </GridColumn>
        <GridColumn Span=""ColSpan.Ten10"" HorizontalAlignment=""HorizontalAlignment.Center"">
            <ParagraphDemo />
        </GridColumn>
        <GridColumn Span=""ColSpan.Two2"">
            <Image Source=""img/image.png"" />
        </GridColumn>
    </GridRow>
</Grid>
```
")
            </CodeTemplate>
        </PresentationPart>

        <PresentationPart Title="Internally Celled" Id="celled">
            <Description>
                A grid can have rows divisions only between internal rows
            </Description>
            <RunTemplate>
                <Grid Internal Celled EqualWidth>
                    <GridRow>
                        <GridColumn Span="ColSpan.Two2">
                            <Image Src="img/image.png" />
                        </GridColumn>
                        <GridColumn>
                            <ParagraphDemo FullWidth />
                        </GridColumn>
                    </GridRow>
                    <GridRow>
                        <GridColumn Span="ColSpan.Two2">
                            <Image Src="img/image.png" />
                        </GridColumn>
                        <GridColumn Span="ColSpan.Ten10">
                            <ParagraphDemo FullWidth />
                        </GridColumn>
                        <GridColumn Span="ColSpan.Two2">
                            <Image Src="img/image.png" />
                        </GridColumn>
                    </GridRow>
                </Grid>
            </RunTemplate>
            <CodeTemplate>
        @Code.GetCode(@"
```html
<Grid Internal Celled>
    <GridRow>
        <GridColumn Span=""ColSpan.Two2"">
            <Image Source=""img/image.png"" />
        </GridColumn>
        <GridColumn>
            <ParagraphDemo />
        </GridColumn>
    </GridRow>
    <GridRow>
        <GridColumn Span=""ColSpan.Two2"">
            <Image Source=""img/image.png"" />
        </GridColumn>
        <GridColumn Span=""ColSpan.Ten10"" HorizontalAlignment=""HorizontalAlignment.Center"">
            <ParagraphDemo />
        </GridColumn>
        <GridColumn Span=""ColSpan.Two2"">
            <Image Source=""img/image.png"" />
        </GridColumn>
    </GridRow>
</Grid>
```
")
            </CodeTemplate>
        </PresentationPart>

        <PresentationPart Title="Stretched">
            <Description>A row can stretch its contents to take up the entire column height</Description>
            <RunTemplate>
                <Grid EqualWidth>
                    <GridRow Stretched>
                        <GridColumn>
                            <Segment>1</Segment>
                        </GridColumn>
                        <GridColumn>
                            <Segment>1</Segment>
                            <Segment>2</Segment>
                        </GridColumn>

                        <GridColumn>
                            <Segment>1</Segment>
                            <Segment>2</Segment>
                            <Segment>3</Segment>
                        </GridColumn>
                    </GridRow>
                </Grid>
                <Message State="State.Info">
                    Stretched can work in grid.
                </Message>
                <Grid Stretched EqualWidth>
                    <GridRow>
                        <GridColumn>
                            <Segment>1</Segment>
                        </GridColumn>
                        <GridColumn>
                            <Segment>1</Segment>
                            <Segment>2</Segment>
                        </GridColumn>

                        <GridColumn>
                            <Segment>1</Segment>
                            <Segment>2</Segment>
                            <Segment>3</Segment>
                        </GridColumn>
                    </GridRow>
                    <GridRow>
                        <GridColumn>
                            <Segment>1</Segment>
                            <Segment>2</Segment>
                            <Segment>3</Segment>
                        </GridColumn>
                        <GridColumn>
                            <Segment>1</Segment>
                        </GridColumn>
                        <GridColumn>
                            <Segment>1</Segment>
                            <Segment>2</Segment>
                        </GridColumn>
                    </GridRow>
                </Grid>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<Grid EqualWidth>
    <GridRow Stretched>
        <GridColumn>
            <Segment>1</Segment>
        </GridColumn>
        <GridColumn>
            <Segment>1</Segment>
            <Segment>2</Segment>
        </GridColumn>

        <GridColumn>
            <Segment>1</Segment>
            <Segment>2</Segment>
            <Segment>3</Segment>
        </GridColumn>
    </GridRow>
</Grid>
<Message State=""State.Info"">
    Stretched can work in grid.
</Message>
<Grid Stretched EqualWidth>
    <GridRow>
        <GridColumn>
            <Segment>1</Segment>
        </GridColumn>
        <GridColumn>
            <Segment>1</Segment>
            <Segment>2</Segment>
        </GridColumn>

        <GridColumn>
            <Segment>1</Segment>
            <Segment>2</Segment>
            <Segment>3</Segment>
        </GridColumn>
    </GridRow>
    <GridRow>
        <GridColumn>
            <Segment>1</Segment>
            <Segment>2</Segment>
            <Segment>3</Segment>
        </GridColumn>
        <GridColumn>
            <Segment>1</Segment>
        </GridColumn>
        <GridColumn>
            <Segment>1</Segment>
            <Segment>2</Segment>
        </GridColumn>
    </GridRow>
</Grid>
```
")
            </CodeTemplate>
        </PresentationPart>

        <PresentationPart Title="Padded">
            <Description>A grid can preserve its vertical and horizontal gutters on first and last columns</Description>
            <RunTemplate>
                <Segment>
                    The following grid has vertical and horizontal gutters
                </Segment>
                <Grid EqualWidth Padded>
                    <GridRow>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                    </GridRow>
                    <GridRow>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                    </GridRow>
                </Grid>
                <Segment>
                    The following grid has vertical gutters.
                </Segment>
                <Grid EqualWidth Vertical Padded>
                    <GridRow>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                    </GridRow>
                    <GridRow>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                    </GridRow>
                </Grid>
                <Segment>
                    The following grid has horizontal gutters.
                </Segment>
                <Grid EqualWidth Horizontal Padded>
                    <GridRow>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                    </GridRow>
                    <GridRow>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                    </GridRow>
                </Grid>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<Grid EqualWidth Padded>...</Grid>
<Grid EqualWidth Vertical Padded>...</Grid>
<Grid EqualWidth Horizontal Padded>...</Grid>
```
")
            </CodeTemplate>
        </PresentationPart>
        <PresentationPart Title="Compact">
            <Description>A grid can appear compact with no or very little padding</Description>
            <RunTemplate>
                <Segment>
                    The following grid is compact.
                </Segment>
                <Grid Span="ColSpan.Two2" Compact Internal Celled>
                    <GridRow>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                    </GridRow>
                    <GridRow>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                    </GridRow>
                </Grid>
                <Segment>
                    The following grid is very compact.
                </Segment>
                <Grid Span="ColSpan.Two2" Very Compact Internal Celled>
                    <GridRow>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                    </GridRow>
                    <GridRow>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                        <GridColumn><Image Src="/img/short-paragraph.png" /></GridColumn>
                    </GridRow>
                </Grid>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<Grid Compact></Grid>
<Grid Very Compact></Grid>
```
")
            </CodeTemplate>
        </PresentationPart>
        <PresentationPart Title="Relaxed">
            <Description>A grid can increase its gutters to allow for more negative space</Description>
            <RunTemplate>
                <Grid Relaxed Span="(4)">
                    <GridColumn><Image Src="/img/image.png" /></GridColumn>
                    <GridColumn><Image Src="/img/image.png" /></GridColumn>
                    <GridColumn><Image Src="/img/image.png" /></GridColumn>
                    <GridColumn><Image Src="/img/image.png" /></GridColumn>
                </Grid>
                <Grid Very Relaxed Span="(4)">
                    <GridColumn><Image Src="/img/image.png" /></GridColumn>
                    <GridColumn><Image Src="/img/image.png" /></GridColumn>
                    <GridColumn><Image Src="/img/image.png" /></GridColumn>
                    <GridColumn><Image Src="/img/image.png" /></GridColumn>
                </Grid>
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<Grid Relaxed></Grid>
<Grid Very Relaxed></Grid>
```
")
            </CodeTemplate>
        </PresentationPart>
    </Body>
</Pager>

@code{
    List<string> Menu = new List<string>(new[] {

         "Demo",
         "GridColumn Span",
        "GridRow",
        "Span In GridRow",
        "Span In Grid",
        "Equal Width",
        "Centering Content",
        "Floated",
        "Divider",
        "Vertical Divider",
        "Celled",
        "Internally Celled","Stretched","Padded","Compact","Relaxed"
    });
}