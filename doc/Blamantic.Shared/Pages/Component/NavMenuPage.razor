@page "/component/nav"

<Pager DataSource="@(new List<string>(new[]{
                         "示例","支持分组","垂直显示","仅显示图标","图文兼容","自定义菜单导航的前后内容","尺寸","子菜单","参数"
                     }))">
    <Body>
        <Header1 Divider="true">
            动态导航
            <SubHeader>
                通过事先配置动态加载导航菜单栏
            </SubHeader>
        </Header1>
        <Segment>
            <code>NavMenu</code> 由 <code>Menu</code> 和 <code>LinkItem</code> 组合构成，并支持无线递归的子菜单，要求事先在依赖注入服务时自行配置导航菜单的层级结构，如代码所示：
            <List Ordered="true" Suffixed="true">
                <Item>
                    @Code.GetCode(@"
```csharp
services.AddNavigation(nav=>{
    nav.Add(new Navigation
    {
        Name = ""XXX"",
        Navigations = new List<Navigation>
        {
            new Navigation
            {
                Name = ""YYY""
            },
            //...
        }
    })
});
```
")
                </Item>
                <Item>
                    使用 <code>NavMenu</code> 组件
                </Item>
            </List>
        </Segment>
        <PresentationPart Title="示例">
            <RunTemplate>
                <NavMenu />
                <NavMenu BackgroundColor="Color.Blue" />
                <NavMenu BackgroundColor="Color.Red" />
            </RunTemplate>
            <CodeTemplate>
                @Code.GetCode(@"
```html
<NavMenu />
<NavMenu BackgroundColor=""Color.Blue"" />
<NavMenu BackgroundColor=""Color.Red"" />
```
```csharp
services.AddNavigation(nav =>
{
    nav.Add(new Navigation
    {
        Name = ""首页"",
        Link = ""/"",
        IconClass = ""home""
    });

    nav.Add(new Navigation
    {
        Name = ""新闻"",
        Navigations = new List<Navigation> {
            new Navigation
            {
                    Name=""国内""
            },
            new Navigation
            {
                Name=""国际""
            },
            new Navigation
            {
                Name=""娱乐"",
                Navigations=new List<Navigation>
                {
                    new Navigation
                    {
                            Name=""内地""
                    },
                    new Navigation
                    {
                        Name=""港台""
                    },
                }
            }
        }
    });
});
```
")
            </CodeTemplate>
        </PresentationPart>
        <PresentationPart Title="支持分组">
    <Description>
        导航菜单支持添加时进行指定键的分组，并在 <code>&lt;NavMenu Key="xxx"/></code> 指定键即可匹配相应的数据。
    </Description>
    <RunTemplate>
        <NavMenu BackgroundColor="Color.Pink" Key="Sports" />
        <NavMenu BackgroundColor="Color.Blue" Key="Game" />
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<NavMenu BackgroundColor=""Color.Pink"" Key=""Sports"" />
<NavMenu BackgroundColor=""Color.Blue"" Key=""Game"" />
```
```csharp
services.AddNavigation(""Game"", nav =>
    {
        nav.Add(new Navigation
        {
            Name = ""游戏"",
            IconClass = ""game"",
            Navigations = new List<Navigation> {
            new Navigation
            {
                    Name=""网游""
            },
            new Navigation
            {
                Name=""手游""
            },
            }
        });
        nav.Add(new Navigation
        {
            Name = ""合作伙伴"",
            IconClass = ""users""
        });
    });

services.AddNavigation(""Sports"", nav =>
{
    nav.Add(new Navigation
    {
        Name = ""NBA""
    });
    nav.Add(new Navigation
    {
        Name = ""CBA""
    });
    nav.Add(new Navigation
    {
        Name = ""FIBA""
    });
});
```
")
    </CodeTemplate>
</PresentationPart>
        <PresentationPart Title="垂直显示">
    <Description>
        设置 <code>Vertical="true"</code> 使其垂直显示
    </Description>
    <RunTemplate>
        <NavMenu Vertical="true"/>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<NavMenu Vertical=""true""/>
```
")
    </CodeTemplate>
</PresentationPart>
        <PresentationPart Title="仅显示图标">
            <Description>
                设置 <code>IconOnly="true"</code> 仅显示设置的 <code>IconClass</code> 的图标，鼠标悬浮可显示名称。
            </Description>
            <RunTemplate>
                <NavMenu IconOnly="true" />
                <NavMenu IconOnly="true" Vertical="true" />
            </RunTemplate>
            <CodeTemplate>
@Code.GetCode(@"
```html
<NavMenu IconOnly=""true"" />
<NavMenu IconOnly=""true"" Vertical=""true"" />
```
")
            </CodeTemplate>
        </PresentationPart>
        <PresentationPart Title="图文兼容">
    <Description>
        设置 <code>LabeledIcon="true"</code> 使图标和文本独占一行。
    </Description>
    <RunTemplate>
        <NavMenu LabeledIcon="true" />
        <NavMenu LabeledIcon="true" Vertical="true" />
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<NavMenu LabeledIcon=""true"" />
<NavMenu LabeledIcon=""true"" Vertical=""true"" />
```
")
    </CodeTemplate>
</PresentationPart>
        <PresentationPart Title="尺寸">
    <Description>
        设置 <code>Size</code> 改变导航的尺寸。
    </Description>
    <RunTemplate>
        <NavMenu Size="Size.Mini" />
        <NavMenu Size="Size.Huge" />
        <NavMenu Size="Size.Mini" Vertical="true" />
        <NavMenu Size="Size.Huge"  Vertical="true"/>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<NavMenu Size=""Size.Mini"" />
<NavMenu Size=""Size.Huge"" />
<NavMenu Size=""Size.Mini"" Vertical=""true"" />
<NavMenu Size=""Size.Huge""  Vertical=""true""/>
```
")
    </CodeTemplate>
</PresentationPart>
        <PresentationPart Title="自定义菜单导航的前后内容">
    <Description>
        设置 <code>StartChildContent</code> 定义菜单前的 UI 内容。
        <br />
        设置 <code>EndChildContent</code> 定义菜单后的 UI 内容。
    </Description>
    <RunTemplate>
        <NavMenu BackgroundColor="Color.Green">
            <StartChildContent>
                <Item>
                    <Icon IconClass="google" /> Logo
                </Item>
            </StartChildContent>
            <EndChildContent>
                    <Menu UI="false" HorizontalPosition="HorizontalPosition.Right" Borderless="true" Linked="true">
                        <Item>登录</Item>
                        <Item>注册</Item>
                    </Menu>
            </EndChildContent>
        </NavMenu>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<NavMenu BackgroundColor=""Color.Green"">
    <StartChildContent>
        <Item>
            <Icon IconClass=""google"" /> Logo
        </Item>
    </StartChildContent>
    <EndChildContent>
            <Menu UI=""false"" HorizontalPosition=""HorizontalPosition.Right"" Borderless=""true"" Linked=""true"">
                <Item>登录</Item>
                <Item>注册</Item>
            </Menu>
    </EndChildContent>
</NavMenu>
```
")
    </CodeTemplate>
</PresentationPart>
        <PresentationPart Title="子菜单">
    <Description>
        可以将动态导航放在 <code>DropDownItem</code> 呈现下拉菜单。
    </Description>
    <RunTemplate>
        <Menu>
            <DropDownItem>
                子菜单
                <Icon IconClass="dropdown" />
                <NavMenu Key="Game" />
            </DropDownItem>
        </Menu>
        <Menu Vertical="true">
            <DropDownItem>
                子菜单
                <Icon IconClass="dropdown" />
                <NavMenu Key="Game"  />
            </DropDownItem>
        </Menu>
    </RunTemplate>
    <CodeTemplate>
        @Code.GetCode(@"
```html
<Menu>
    <DropDownItem>
        子菜单
        <Icon IconClass=""dropdown"" />
        <NavMenu Key=""Game"" />
    </DropDownItem>
</Menu>
<Menu Vertical=""true"">
    <DropDownItem>
        子菜单
        <Icon IconClass=""dropdown"" />
        <NavMenu Key=""Game""  />
    </DropDownItem>
</Menu>
```
")
    </CodeTemplate>
</PresentationPart>
                        <ParameterTable>
                    <Content>
                        <tr>
                            <td>Key</td>
                            <td>分组的键</td>
                            <td>string</td>
                            <td>Default</td>
                        </tr>
                        <tr>
                            <td>Vertical</td>
                            <td>是否垂直显示</td>
                            <td>bool</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>BackgroundColor</td>
                            <td>背景颜色</td>
                            <td>enum</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>ActivedColor</td>
                            <td>选中项的颜色</td>
                            <td>enum</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>Size</td>
                            <td>尺寸大小</td>
                            <td>enum</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>IconOnly</td>
                            <td>仅显示图标</td>
                            <td>bool</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>LabeledIcon</td>
                            <td>图文混搭兼容</td>
                            <td>bool</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>Style</td>
                            <td>风格样式</td>
                            <td>enum</td>
                            <td>MenuStyle.Default</td>
                        </tr>     
                        <tr>
                            <td>StartChildContent</td>
                            <td>呈现在导航菜单前的 UI 内容</td>
                            <td>RenderFragment</td>
                            <td></td>
                        </tr>        
                        <tr>
                            <td>EndChildContent</td>
                            <td>呈现在导航菜单后的 UI 内容</td>
                            <td>RenderFragment</td>
                            <td></td>
                        </tr>                 
                    </Content>
        </ParameterTable>
    </Body>
</Pager>