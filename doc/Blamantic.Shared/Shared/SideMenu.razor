

<Menu Vertical="true" Style="MenuStyle.Pill" Compact="true">
    <Item>
        <DropDownList AdditionalStyles="@("width:90%!important")" MaxFilterItems="5" Removable="true" Size="Size.Mini" Compact="true" Fluid="true" Filterable="true" T="Navigation" DataSource="SearchMenus" OnItemSelected="SelectItem" FilterField="@nameof(Navigation.Name)">
            <DefaultItem>关键字</DefaultItem>
            <ItemFormat>
                @context.Name
            </ItemFormat>
        </DropDownList>
    </Item>
    <LinkItem Link="/common/global">概念(Concept)</LinkItem>
    <ItemHeader Header="true">
        <Header6 Divider="true">
            通用(Common)
        </Header6>
    </ItemHeader>
    @foreach (var item in Common)
    {
        <LinkItem Link="@item.Link" Match="NavLinkMatch.All">
            @item.Name
        </LinkItem>
    }
    <ItemHeader Header="true">
        <Header6 Divider="true">
            输入(Input)
        </Header6>
    </ItemHeader>
    @foreach (var item in Input)
    {
        <LinkItem Link="@item.Link" Match="NavLinkMatch.All">
            @item.Name
        </LinkItem>
    }
    <ItemHeader Header="true">
        <Header6 Divider="true">
            布局(Layout)
        </Header6>
    </ItemHeader>
    @foreach (var item in Layout)
    {
        <LinkItem Link="@item.Link" Match="NavLinkMatch.All">
            @item.Name
        </LinkItem>
    }
    <ItemHeader Header="true">
        <Header6 Divider="true">
            数据(Data)
        </Header6>
    </ItemHeader>
    @foreach (var item in Data)
    {
        <LinkItem Link="@item.Link" Match="NavLinkMatch.All">
            @item.Name
        </LinkItem>
    }
    <ItemHeader Header="true">
        <Header6 Divider="true">
            反馈(Feedback)
        </Header6>
    </ItemHeader>
    @foreach (var item in Feedback)
    {
        <LinkItem Link="@item.Link" Match="NavLinkMatch.All">
            @item.Name
        </LinkItem>
    }
</Menu>

@inject INavigationService NavService
@inject Microsoft.AspNetCore.Components.NavigationManager NavManager
@code{

    IEnumerable<Navigation> SearchMenus { get; set; }

    IEnumerable<Navigation> Common { get; set; }
    IEnumerable<Navigation> Input { get; set; }
    IEnumerable<Navigation> Layout { get; set; }
    IEnumerable<Navigation> Data { get; set; }
    IEnumerable<Navigation> Feedback { get; set; }

    protected override void OnInitialized()
    {
        Common = NavService.GetNavigations("Common");
        Input = NavService.GetNavigations("Input");
        Layout = NavService.GetNavigations("Layout");
        Data = NavService.GetNavigations("Data");
        Feedback = NavService.GetNavigations("Feedback");

        SearchMenus = Common.Concat(Input).Concat(Layout).Concat(Data).Concat(Feedback).OrderBy(m => m.Name);
    }

    void SelectItem(Navigation item)
    {
        if (item == null)
        {
            return;
        }

        if (NavManager.Uri.Contains(item.Link))
        {
            return;
        }

        NavManager.NavigateTo(item.Link);
    }
}