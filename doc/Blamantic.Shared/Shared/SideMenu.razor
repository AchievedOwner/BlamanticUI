

<Menu Vertical="true" BackgroundColor="Color.Purple">
    <Item>
        <Header2 Inverted="true">
            @Code.TITLE
        </Header2>
    </Item>
    <LinkItem Link="https://github.com/AchievedOwner/CastUI.git" Target="LinkTarget.Blank" Title="Github">
        <Content>

            <Icon IconClass="github" Size="Size.Large" />
            <Label Inverted="true" Color="Color.Yellow">@Code.GetVersion()</Label>
        </Content>
    </LinkItem>
    <Item>
        <DropDownList AdditionalStyles="@("width:90%!important")" MaxFilterItems="5" Removable="true" Size="Size.Mini" Compact="true" Fluid="true" Filterable="true" T="Navigation" DataSource="SearchMenus" OnItemSelected="SelectItem" FilterField="@nameof(Navigation.Name)">
            <DefaultItem>关键字</DefaultItem>
            <ItemFormat>
                @context.Name
            </ItemFormat>
        </DropDownList>
    </Item>
    <Item>
        <SubMenu>
            <LinkItem Link="/">首页(Home)</LinkItem>
            <LinkItem Link="/common/global">概念(Concept)</LinkItem>
        </SubMenu>
    </Item>
    <Item>
        <Header>
            元素(Element)
        </Header>
        <SubMenu>
            @foreach (var item in Elements)
            {
                <LinkItem Link="@item.Link" Match="NavLinkMatch.All">
                    @item.Name
                </LinkItem>
            }
        </SubMenu>
    </Item>
    <Item>
        <Header>组件(Component)</Header>
        <SubMenu>
            @foreach (var item in Components)
            {
                <LinkItem Link="@item.Link" Match="NavLinkMatch.All">
                    @item.Name
                </LinkItem>
            }
        </SubMenu>
    </Item>
    <Item>
        <Header>服务(Service)</Header>
        <SubMenu>
            @foreach (var item in Services)
            {
                <LinkItem Link="@item.Link" Match="NavLinkMatch.All">
                    @item.Name
                </LinkItem>
            }
        </SubMenu>
    </Item>
</Menu>

@inject INavigationService NavService
@inject Microsoft.AspNetCore.Components.NavigationManager NavManager
@code{

    IEnumerable<Navigation> SearchMenus { get; set; }

    IEnumerable<Navigation> Components { get; set; }
    IEnumerable<Navigation> Elements { get; set; }
    IEnumerable<Navigation> Services { get; set; }

    protected override void OnInitialized()
    {
        Components = NavService.GetNavigations("Component");
        Elements = NavService.GetNavigations("Element");
        Services = NavService.GetNavigations("Service");

        SearchMenus = Components.Concat(Elements).Concat(Services).OrderBy(m => m.Name);
    }

    void SelectItem(Navigation item)
    {
        if (item == null)
        {
            return;
        }

        if (NavManager.Uri.Contains(item.Link))
        {
            return;
        }

        NavManager.NavigateTo(item.Link);
    }
}